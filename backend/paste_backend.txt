# BACKEND SNAPSHOT 2025-08-21T02:23:19-06:00

## TREE (top 3 levels)
.
./.env
./index.js
./main.py
./npm-shrinkwrap.json
./package.json
./paste_backend.txt
./routes
./routes/admin.js
./routes/auth.js
./routes/authRoutes.js
./routes/kyc.js
./routes/licenses.js
./routes/payments.js
./routes/stripe.js
./routes/stripe_webhook.js
./routes/twofa.js
./routes/user.js
./scrips
./scrips/database.js
./scrips/demo-email.js
./scrips/flush_db.js
./scrips/makeAdmin.js
./server.js
./third_party
./third_party/leveldb
./third_party/leveldb/iira_ai_schema.sql
./third_party/poic
./third_party/poic/api
./third_party/poic/index
./third_party/poic/state_id
./third_party/poic/wallet

## package.json
{
  "name": "iira-backend",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "tunnel": "ngrok http 3001"
  },
  "dependencies": {
    "bcryptjs": "^3.0.2",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^17.0.1",
    "express": "^5.1.0",
    "express-rate-limit": "^7.5.1",
    "express-session": "^1.18.1",
    "jsonwebtoken": "^9.0.2",
    "multer": "^2.0.1",
    "node-fetch": "^2.7.0",
    "nodemailer": "^7.0.4",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "pg": "^8.16.3",
    "qrcode": "^1.5.4",
    "speakeasy": "^2.0.0",
    "stripe": "^18.3.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.22",
    "typescript": "^4.9.5"
  }
}

## .env (REDACTED)
DATABASE_URL=***REDACTED***
FRONTEND_URL=***REDACTED***

GOOGLE_CLIENT_ID=***REDACTED***
GOOGLE_CLIENT_SECRET=***REDACTED***
GOOGLE_REDIRECT=***REDACTED***
JWT_SECRET=***REDACTED***


STRIPE_SECRET_KEY=***REDACTED***
STRIPE_PRICE_WALLET=***REDACTED***
STRIPE_WEBHOOK_SECRET=***REDACTED***



## FILES (line-numbered)

----- ./index.js -----
     1	const express = require("express");
     2	const kycRouter = require("./routes");
     3	const app = express();
     4	
     5	app.use(express.json({ limit: "10mb" }));
     6	
     7	app.use("/api", kycRouter);
     8	
     9	const PORT = process.env.PORT || 3001;
    10	app.listen(PORT, () => console.log(`API running on port ${PORT}`));

----- ./npm-shrinkwrap.json -----
     1	{
     2	  "name": "iira-backend",
     3	  "version": "1.0.0",
     4	  "lockfileVersion": 3,
     5	  "requires": true,
     6	  "packages": {
     7	    "": {
     8	      "name": "iira-backend",
     9	      "version": "1.0.0",
    10	      "dependencies": {
    11	        "bcryptjs": "^3.0.2",
    12	        "cookie-parser": "^1.4.7",
    13	        "cors": "^2.8.5",
    14	        "dotenv": "^17.0.1",
    15	        "express": "^5.1.0",
    16	        "express-rate-limit": "^7.5.1",
    17	        "express-session": "^1.18.1",
    18	        "jsonwebtoken": "^9.0.2",
    19	        "multer": "^2.0.1",
    20	        "node-fetch": "^2.7.0",
    21	        "nodemailer": "^7.0.4",
    22	        "passport": "^0.7.0",
    23	        "passport-google-oauth20": "^2.0.0",
    24	        "pg": "^8.16.3",
    25	        "qrcode": "^1.5.4",
    26	        "speakeasy": "^2.0.0",
    27	        "stripe": "^18.3.0"
    28	      },
    29	      "devDependencies": {
    30	        "nodemon": "^2.0.22",
    31	        "typescript": "^4.9.5"
    32	      }
    33	    },
    34	    "node_modules/accepts": {
    35	      "version": "2.0.0",
    36	      "resolved": "https://registry.npmjs.org/accepts/-/accepts-2.0.0.tgz",
    37	      "integrity": "sha512-5cvg6CtKwfgdmVqY1WIiXKc3Q1bkRqGLi+2W/6ao+6Y7gu/RCwRuAhGEzh5B4KlszSuTLgZYuqFqo5bImjNKng==",
    38	      "license": "MIT",
    39	      "dependencies": {
    40	        "mime-types": "^3.0.0",
    41	        "negotiator": "^1.0.0"
    42	      },
    43	      "engines": {
    44	        "node": ">= 0.6"
    45	      }
    46	    },
    47	    "node_modules/ansi-regex": {
    48	      "version": "5.0.1",
    49	      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
    50	      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
    51	      "license": "MIT",
    52	      "engines": {
    53	        "node": ">=8"
    54	      }
    55	    },
    56	    "node_modules/ansi-styles": {
    57	      "version": "4.3.0",
    58	      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
    59	      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
    60	      "license": "MIT",
    61	      "dependencies": {
    62	        "color-convert": "^2.0.1"
    63	      },
    64	      "engines": {
    65	        "node": ">=8"
    66	      },
    67	      "funding": {
    68	        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
    69	      }
    70	    },
    71	    "node_modules/anymatch": {
    72	      "version": "3.1.3",
    73	      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
    74	      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
    75	      "dev": true,
    76	      "license": "ISC",
    77	      "dependencies": {
    78	        "normalize-path": "^3.0.0",
    79	        "picomatch": "^2.0.4"
    80	      },
    81	      "engines": {
    82	        "node": ">= 8"
    83	      }
    84	    },
    85	    "node_modules/append-field": {
    86	      "version": "1.0.0",
    87	      "resolved": "https://registry.npmjs.org/append-field/-/append-field-1.0.0.tgz",
    88	      "integrity": "sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==",
    89	      "license": "MIT"
    90	    },
    91	    "node_modules/balanced-match": {
    92	      "version": "1.0.2",
    93	      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
    94	      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
    95	      "dev": true,
    96	      "license": "MIT"
    97	    },
    98	    "node_modules/base32.js": {
    99	      "version": "0.0.1",
   100	      "resolved": "https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
   101	      "integrity": "sha512-EGHIRiegFa62/SsA1J+Xs2tIzludPdzM064N9wjbiEgHnGnJ1V0WEpA4pEwCYT5nDvZk3ubf0shqaCS7k6xeUQ==",
   102	      "license": "MIT"
   103	    },
   104	    "node_modules/base64url": {
   105	      "version": "3.0.1",
   106	      "resolved": "https://registry.npmjs.org/base64url/-/base64url-3.0.1.tgz",
   107	      "integrity": "sha512-ir1UPr3dkwexU7FdV8qBBbNDRUhMmIekYMFZfi+C/sLNnRESKPl23nB9b2pltqfOQNnGzsDdId90AEtG5tCx4A==",
   108	      "license": "MIT",
   109	      "engines": {
   110	        "node": ">=6.0.0"
   111	      }
   112	    },
   113	    "node_modules/bcryptjs": {
   114	      "version": "3.0.2",
   115	      "resolved": "https://registry.npmjs.org/bcryptjs/-/bcryptjs-3.0.2.tgz",
   116	      "integrity": "sha512-k38b3XOZKv60C4E2hVsXTolJWfkGRMbILBIe2IBITXciy5bOsTKot5kDrf3ZfufQtQOUN5mXceUEpU1rTl9Uog==",
   117	      "license": "BSD-3-Clause",
   118	      "bin": {
   119	        "bcrypt": "bin/bcrypt"
   120	      }
   121	    },
   122	    "node_modules/binary-extensions": {
   123	      "version": "2.3.0",
   124	      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
   125	      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
   126	      "dev": true,
   127	      "license": "MIT",
   128	      "engines": {
   129	        "node": ">=8"
   130	      },
   131	      "funding": {
   132	        "url": "https://github.com/sponsors/sindresorhus"
   133	      }
   134	    },
   135	    "node_modules/body-parser": {
   136	      "version": "2.2.0",
   137	      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-2.2.0.tgz",
   138	      "integrity": "sha512-02qvAaxv8tp7fBa/mw1ga98OGm+eCbqzJOKoRt70sLmfEEi+jyBYVTDGfCL/k06/4EMk/z01gCe7HoCH/f2LTg==",
   139	      "license": "MIT",
   140	      "dependencies": {
   141	        "bytes": "^3.1.2",
   142	        "content-type": "^1.0.5",
   143	        "debug": "^4.4.0",
   144	        "http-errors": "^2.0.0",
   145	        "iconv-lite": "^0.6.3",
   146	        "on-finished": "^2.4.1",
   147	        "qs": "^6.14.0",
   148	        "raw-body": "^3.0.0",
   149	        "type-is": "^2.0.0"
   150	      },
   151	      "engines": {
   152	        "node": ">=18"
   153	      }
   154	    },
   155	    "node_modules/brace-expansion": {
   156	      "version": "1.1.12",
   157	      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
   158	      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
   159	      "dev": true,
   160	      "license": "MIT",
   161	      "dependencies": {
   162	        "balanced-match": "^1.0.0",
   163	        "concat-map": "0.0.1"
   164	      }
   165	    },
   166	    "node_modules/braces": {
   167	      "version": "3.0.3",
   168	      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
   169	      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
   170	      "dev": true,
   171	      "license": "MIT",
   172	      "dependencies": {
   173	        "fill-range": "^7.1.1"
   174	      },
   175	      "engines": {
   176	        "node": ">=8"
   177	      }
   178	    },
   179	    "node_modules/buffer-equal-constant-time": {
   180	      "version": "1.0.1",
   181	      "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
   182	      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==",
   183	      "license": "BSD-3-Clause"
   184	    },
   185	    "node_modules/buffer-from": {
   186	      "version": "1.1.2",
   187	      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
   188	      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
   189	      "license": "MIT"
   190	    },
   191	    "node_modules/busboy": {
   192	      "version": "1.6.0",
   193	      "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
   194	      "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
   195	      "dependencies": {
   196	        "streamsearch": "^1.1.0"
   197	      },
   198	      "engines": {
   199	        "node": ">=10.16.0"
   200	      }
   201	    },
   202	    "node_modules/bytes": {
   203	      "version": "3.1.2",
   204	      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
   205	      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
   206	      "license": "MIT",
   207	      "engines": {
   208	        "node": ">= 0.8"
   209	      }
   210	    },
   211	    "node_modules/call-bind-apply-helpers": {
   212	      "version": "1.0.2",
   213	      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
   214	      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
   215	      "license": "MIT",
   216	      "dependencies": {
   217	        "es-errors": "^1.3.0",
   218	        "function-bind": "^1.1.2"
   219	      },
   220	      "engines": {
   221	        "node": ">= 0.4"
   222	      }
   223	    },
   224	    "node_modules/call-bound": {
   225	      "version": "1.0.4",
   226	      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
   227	      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
   228	      "license": "MIT",
   229	      "dependencies": {
   230	        "call-bind-apply-helpers": "^1.0.2",
   231	        "get-intrinsic": "^1.3.0"
   232	      },
   233	      "engines": {
   234	        "node": ">= 0.4"
   235	      },
   236	      "funding": {
   237	        "url": "https://github.com/sponsors/ljharb"
   238	      }
   239	    },
   240	    "node_modules/camelcase": {
   241	      "version": "5.3.1",
   242	      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
   243	      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
   244	      "license": "MIT",
   245	      "engines": {
   246	        "node": ">=6"
   247	      }
   248	    },
   249	    "node_modules/chokidar": {
   250	      "version": "3.6.0",
   251	      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
   252	      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
   253	      "dev": true,
   254	      "license": "MIT",
   255	      "dependencies": {
   256	        "anymatch": "~3.1.2",
   257	        "braces": "~3.0.2",
   258	        "glob-parent": "~5.1.2",
   259	        "is-binary-path": "~2.1.0",
   260	        "is-glob": "~4.0.1",
   261	        "normalize-path": "~3.0.0",
   262	        "readdirp": "~3.6.0"
   263	      },
   264	      "engines": {
   265	        "node": ">= 8.10.0"
   266	      },
   267	      "funding": {
   268	        "url": "https://paulmillr.com/funding/"
   269	      },
   270	      "optionalDependencies": {
   271	        "fsevents": "~2.3.2"
   272	      }
   273	    },
   274	    "node_modules/cliui": {
   275	      "version": "6.0.0",
   276	      "resolved": "https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz",
   277	      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==",
   278	      "license": "ISC",
   279	      "dependencies": {
   280	        "string-width": "^4.2.0",
   281	        "strip-ansi": "^6.0.0",
   282	        "wrap-ansi": "^6.2.0"
   283	      }
   284	    },
   285	    "node_modules/color-convert": {
   286	      "version": "2.0.1",
   287	      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
   288	      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
   289	      "license": "MIT",
   290	      "dependencies": {
   291	        "color-name": "~1.1.4"
   292	      },
   293	      "engines": {
   294	        "node": ">=7.0.0"
   295	      }
   296	    },
   297	    "node_modules/color-name": {
   298	      "version": "1.1.4",
   299	      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
   300	      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
   301	      "license": "MIT"
   302	    },
   303	    "node_modules/concat-map": {
   304	      "version": "0.0.1",
   305	      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
   306	      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
   307	      "dev": true,
   308	      "license": "MIT"
   309	    },
   310	    "node_modules/concat-stream": {
   311	      "version": "2.0.0",
   312	      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-2.0.0.tgz",
   313	      "integrity": "sha512-MWufYdFw53ccGjCA+Ol7XJYpAlW6/prSMzuPOTRnJGcGzuhLn4Scrz7qf6o8bROZ514ltazcIFJZevcfbo0x7A==",
   314	      "engines": [
   315	        "node >= 6.0"
   316	      ],
   317	      "license": "MIT",
   318	      "dependencies": {
   319	        "buffer-from": "^1.0.0",
   320	        "inherits": "^2.0.3",
   321	        "readable-stream": "^3.0.2",
   322	        "typedarray": "^0.0.6"
   323	      }
   324	    },
   325	    "node_modules/content-disposition": {
   326	      "version": "1.0.0",
   327	      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-1.0.0.tgz",
   328	      "integrity": "sha512-Au9nRL8VNUut/XSzbQA38+M78dzP4D+eqg3gfJHMIHHYa3bg067xj1KxMUWj+VULbiZMowKngFFbKczUrNJ1mg==",
   329	      "license": "MIT",
   330	      "dependencies": {
   331	        "safe-buffer": "5.2.1"
   332	      },
   333	      "engines": {
   334	        "node": ">= 0.6"
   335	      }
   336	    },
   337	    "node_modules/content-type": {
   338	      "version": "1.0.5",
   339	      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
   340	      "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
   341	      "license": "MIT",
   342	      "engines": {
   343	        "node": ">= 0.6"
   344	      }
   345	    },
   346	    "node_modules/cookie": {
   347	      "version": "0.7.2",
   348	      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
   349	      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
   350	      "license": "MIT",
   351	      "engines": {
   352	        "node": ">= 0.6"
   353	      }
   354	    },
   355	    "node_modules/cookie-parser": {
   356	      "version": "1.4.7",
   357	      "resolved": "https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.7.tgz",
   358	      "integrity": "sha512-nGUvgXnotP3BsjiLX2ypbQnWoGUPIIfHQNZkkC668ntrzGWEZVW70HDEB1qnNGMicPje6EttlIgzo51YSwNQGw==",
   359	      "license": "MIT",
   360	      "dependencies": {
   361	        "cookie": "0.7.2",
   362	        "cookie-signature": "1.0.6"
   363	      },
   364	      "engines": {
   365	        "node": ">= 0.8.0"
   366	      }
   367	    },
   368	    "node_modules/cookie-parser/node_modules/cookie-signature": {
   369	      "version": "1.0.6",
   370	      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
   371	      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
   372	      "license": "MIT"
   373	    },
   374	    "node_modules/cookie-signature": {
   375	      "version": "1.2.2",
   376	      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.2.2.tgz",
   377	      "integrity": "sha512-D76uU73ulSXrD1UXF4KE2TMxVVwhsnCgfAyTg9k8P6KGZjlXKrOLe4dJQKI3Bxi5wjesZoFXJWElNWBjPZMbhg==",
   378	      "license": "MIT",
   379	      "engines": {
   380	        "node": ">=6.6.0"
   381	      }
   382	    },
   383	    "node_modules/cors": {
   384	      "version": "2.8.5",
   385	      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
   386	      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
   387	      "license": "MIT",
   388	      "dependencies": {
   389	        "object-assign": "^4",
   390	        "vary": "^1"
   391	      },
   392	      "engines": {
   393	        "node": ">= 0.10"
   394	      }
   395	    },
   396	    "node_modules/debug": {
   397	      "version": "4.4.1",
   398	      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
   399	      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
   400	      "license": "MIT",
   401	      "dependencies": {
   402	        "ms": "^2.1.3"
   403	      },
   404	      "engines": {
   405	        "node": ">=6.0"
   406	      },
   407	      "peerDependenciesMeta": {
   408	        "supports-color": {
   409	          "optional": true
   410	        }
   411	      }
   412	    },
   413	    "node_modules/decamelize": {
   414	      "version": "1.2.0",
   415	      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
   416	      "integrity": "sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==",
   417	      "license": "MIT",
   418	      "engines": {
   419	        "node": ">=0.10.0"
   420	      }
   421	    },
   422	    "node_modules/depd": {
   423	      "version": "2.0.0",
   424	      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
   425	      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
   426	      "license": "MIT",
   427	      "engines": {
   428	        "node": ">= 0.8"
   429	      }
   430	    },
   431	    "node_modules/dijkstrajs": {
   432	      "version": "1.0.3",
   433	      "resolved": "https://registry.npmjs.org/dijkstrajs/-/dijkstrajs-1.0.3.tgz",
   434	      "integrity": "sha512-qiSlmBq9+BCdCA/L46dw8Uy93mloxsPSbwnm5yrKn2vMPiy8KyAskTF6zuV/j5BMsmOGZDPs7KjU+mjb670kfA==",
   435	      "license": "MIT"
   436	    },
   437	    "node_modules/dotenv": {
   438	      "version": "17.0.1",
   439	      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-17.0.1.tgz",
   440	      "integrity": "sha512-GLjkduuAL7IMJg/ZnOPm9AnWKJ82mSE2tzXLaJ/6hD6DhwGfZaXG77oB8qbReyiczNxnbxQKyh0OE5mXq0bAHA==",
   441	      "license": "BSD-2-Clause",
   442	      "engines": {
   443	        "node": ">=12"
   444	      },
   445	      "funding": {
   446	        "url": "https://dotenvx.com"
   447	      }
   448	    },
   449	    "node_modules/dunder-proto": {
   450	      "version": "1.0.1",
   451	      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
   452	      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
   453	      "license": "MIT",
   454	      "dependencies": {
   455	        "call-bind-apply-helpers": "^1.0.1",
   456	        "es-errors": "^1.3.0",
   457	        "gopd": "^1.2.0"
   458	      },
   459	      "engines": {
   460	        "node": ">= 0.4"
   461	      }
   462	    },
   463	    "node_modules/ecdsa-sig-formatter": {
   464	      "version": "1.0.11",
   465	      "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
   466	      "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
   467	      "license": "Apache-2.0",
   468	      "dependencies": {
   469	        "safe-buffer": "^5.0.1"
   470	      }
   471	    },
   472	    "node_modules/ee-first": {
   473	      "version": "1.1.1",
   474	      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
   475	      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
   476	      "license": "MIT"
   477	    },
   478	    "node_modules/emoji-regex": {
   479	      "version": "8.0.0",
   480	      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
   481	      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
   482	      "license": "MIT"
   483	    },
   484	    "node_modules/encodeurl": {
   485	      "version": "2.0.0",
   486	      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
   487	      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
   488	      "license": "MIT",
   489	      "engines": {
   490	        "node": ">= 0.8"
   491	      }
   492	    },
   493	    "node_modules/encoding": {
   494	      "version": "0.1.13",
   495	      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.13.tgz",
   496	      "integrity": "sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==",
   497	      "license": "MIT",
   498	      "optional": true,
   499	      "peer": true,
   500	      "dependencies": {
   501	        "iconv-lite": "^0.6.2"
   502	      }
   503	    },
   504	    "node_modules/es-define-property": {
   505	      "version": "1.0.1",
   506	      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
   507	      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
   508	      "license": "MIT",
   509	      "engines": {
   510	        "node": ">= 0.4"
   511	      }
   512	    },
   513	    "node_modules/es-errors": {
   514	      "version": "1.3.0",
   515	      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
   516	      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
   517	      "license": "MIT",
   518	      "engines": {
   519	        "node": ">= 0.4"
   520	      }
   521	    },
   522	    "node_modules/es-object-atoms": {
   523	      "version": "1.1.1",
   524	      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
   525	      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
   526	      "license": "MIT",
   527	      "dependencies": {
   528	        "es-errors": "^1.3.0"
   529	      },
   530	      "engines": {
   531	        "node": ">= 0.4"
   532	      }
   533	    },
   534	    "node_modules/escape-html": {
   535	      "version": "1.0.3",
   536	      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
   537	      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
   538	      "license": "MIT"
   539	    },
   540	    "node_modules/etag": {
   541	      "version": "1.8.1",
   542	      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
   543	      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
   544	      "license": "MIT",
   545	      "engines": {
   546	        "node": ">= 0.6"
   547	      }
   548	    },
   549	    "node_modules/express": {
   550	      "version": "5.1.0",
   551	      "resolved": "https://registry.npmjs.org/express/-/express-5.1.0.tgz",
   552	      "integrity": "sha512-DT9ck5YIRU+8GYzzU5kT3eHGA5iL+1Zd0EutOmTE9Dtk+Tvuzd23VBU+ec7HPNSTxXYO55gPV/hq4pSBJDjFpA==",
   553	      "license": "MIT",
   554	      "dependencies": {
   555	        "accepts": "^2.0.0",
   556	        "body-parser": "^2.2.0",
   557	        "content-disposition": "^1.0.0",
   558	        "content-type": "^1.0.5",
   559	        "cookie": "^0.7.1",
   560	        "cookie-signature": "^1.2.1",
   561	        "debug": "^4.4.0",
   562	        "encodeurl": "^2.0.0",
   563	        "escape-html": "^1.0.3",
   564	        "etag": "^1.8.1",
   565	        "finalhandler": "^2.1.0",
   566	        "fresh": "^2.0.0",
   567	        "http-errors": "^2.0.0",
   568	        "merge-descriptors": "^2.0.0",
   569	        "mime-types": "^3.0.0",
   570	        "on-finished": "^2.4.1",
   571	        "once": "^1.4.0",
   572	        "parseurl": "^1.3.3",
   573	        "proxy-addr": "^2.0.7",
   574	        "qs": "^6.14.0",
   575	        "range-parser": "^1.2.1",
   576	        "router": "^2.2.0",
   577	        "send": "^1.1.0",
   578	        "serve-static": "^2.2.0",
   579	        "statuses": "^2.0.1",
   580	        "type-is": "^2.0.1",
   581	        "vary": "^1.1.2"
   582	      },
   583	      "engines": {
   584	        "node": ">= 18"
   585	      },
   586	      "funding": {
   587	        "type": "opencollective",
   588	        "url": "https://opencollective.com/express"
   589	      }
   590	    },
   591	    "node_modules/express-rate-limit": {
   592	      "version": "7.5.1",
   593	      "resolved": "https://registry.npmjs.org/express-rate-limit/-/express-rate-limit-7.5.1.tgz",
   594	      "integrity": "sha512-7iN8iPMDzOMHPUYllBEsQdWVB6fPDMPqwjBaFrgr4Jgr/+okjvzAy+UHlYYL/Vs0OsOrMkwS6PJDkFlJwoxUnw==",
   595	      "license": "MIT",
   596	      "engines": {
   597	        "node": ">= 16"
   598	      },
   599	      "funding": {
   600	        "url": "https://github.com/sponsors/express-rate-limit"
   601	      },
   602	      "peerDependencies": {
   603	        "express": ">= 4.11"
   604	      }
   605	    },
   606	    "node_modules/express-session": {
   607	      "version": "1.18.1",
   608	      "resolved": "https://registry.npmjs.org/express-session/-/express-session-1.18.1.tgz",
   609	      "integrity": "sha512-a5mtTqEaZvBCL9A9aqkrtfz+3SMDhOVUnjafjo+s7A9Txkq+SVX2DLvSp1Zrv4uCXa3lMSK3viWnh9Gg07PBUA==",
   610	      "license": "MIT",
   611	      "dependencies": {
   612	        "cookie": "0.7.2",
   613	        "cookie-signature": "1.0.7",
   614	        "debug": "2.6.9",
   615	        "depd": "~2.0.0",
   616	        "on-headers": "~1.0.2",
   617	        "parseurl": "~1.3.3",
   618	        "safe-buffer": "5.2.1",
   619	        "uid-safe": "~2.1.5"
   620	      },
   621	      "engines": {
   622	        "node": ">= 0.8.0"
   623	      }
   624	    },
   625	    "node_modules/express-session/node_modules/cookie-signature": {
   626	      "version": "1.0.7",
   627	      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.7.tgz",
   628	      "integrity": "sha512-NXdYc3dLr47pBkpUCHtKSwIOQXLVn8dZEuywboCOJY/osA0wFSLlSawr3KN8qXJEyX66FcONTH8EIlVuK0yyFA==",
   629	      "license": "MIT"
   630	    },
   631	    "node_modules/express-session/node_modules/debug": {
   632	      "version": "2.6.9",
   633	      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
   634	      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
   635	      "license": "MIT",
   636	      "dependencies": {
   637	        "ms": "2.0.0"
   638	      }
   639	    },
   640	    "node_modules/express-session/node_modules/ms": {
   641	      "version": "2.0.0",
   642	      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
   643	      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
   644	      "license": "MIT"
   645	    },
   646	    "node_modules/fill-range": {
   647	      "version": "7.1.1",
   648	      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
   649	      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
   650	      "dev": true,
   651	      "license": "MIT",
   652	      "dependencies": {
   653	        "to-regex-range": "^5.0.1"
   654	      },
   655	      "engines": {
   656	        "node": ">=8"
   657	      }
   658	    },
   659	    "node_modules/finalhandler": {
   660	      "version": "2.1.0",
   661	      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-2.1.0.tgz",
   662	      "integrity": "sha512-/t88Ty3d5JWQbWYgaOGCCYfXRwV1+be02WqYYlL6h0lEiUAMPM8o8qKGO01YIkOHzka2up08wvgYD0mDiI+q3Q==",
   663	      "license": "MIT",
   664	      "dependencies": {
   665	        "debug": "^4.4.0",
   666	        "encodeurl": "^2.0.0",
   667	        "escape-html": "^1.0.3",
   668	        "on-finished": "^2.4.1",
   669	        "parseurl": "^1.3.3",
   670	        "statuses": "^2.0.1"
   671	      },
   672	      "engines": {
   673	        "node": ">= 0.8"
   674	      }
   675	    },
   676	    "node_modules/find-up": {
   677	      "version": "4.1.0",
   678	      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
   679	      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
   680	      "license": "MIT",
   681	      "dependencies": {
   682	        "locate-path": "^5.0.0",
   683	        "path-exists": "^4.0.0"
   684	      },
   685	      "engines": {
   686	        "node": ">=8"
   687	      }
   688	    },
   689	    "node_modules/forwarded": {
   690	      "version": "0.2.0",
   691	      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
   692	      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
   693	      "license": "MIT",
   694	      "engines": {
   695	        "node": ">= 0.6"
   696	      }
   697	    },
   698	    "node_modules/fresh": {
   699	      "version": "2.0.0",
   700	      "resolved": "https://registry.npmjs.org/fresh/-/fresh-2.0.0.tgz",
   701	      "integrity": "sha512-Rx/WycZ60HOaqLKAi6cHRKKI7zxWbJ31MhntmtwMoaTeF7XFH9hhBp8vITaMidfljRQ6eYWCKkaTK+ykVJHP2A==",
   702	      "license": "MIT",
   703	      "engines": {
   704	        "node": ">= 0.8"
   705	      }
   706	    },
   707	    "node_modules/fsevents": {
   708	      "version": "2.3.3",
   709	      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
   710	      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
   711	      "dev": true,
   712	      "hasInstallScript": true,
   713	      "license": "MIT",
   714	      "optional": true,
   715	      "os": [
   716	        "darwin"
   717	      ],
   718	      "engines": {
   719	        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
   720	      }
   721	    },
   722	    "node_modules/function-bind": {
   723	      "version": "1.1.2",
   724	      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
   725	      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
   726	      "license": "MIT",
   727	      "funding": {
   728	        "url": "https://github.com/sponsors/ljharb"
   729	      }
   730	    },
   731	    "node_modules/get-caller-file": {
   732	      "version": "2.0.5",
   733	      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
   734	      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
   735	      "license": "ISC",
   736	      "engines": {
   737	        "node": "6.* || 8.* || >= 10.*"
   738	      }
   739	    },
   740	    "node_modules/get-intrinsic": {
   741	      "version": "1.3.0",
   742	      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
   743	      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
   744	      "license": "MIT",
   745	      "dependencies": {
   746	        "call-bind-apply-helpers": "^1.0.2",
   747	        "es-define-property": "^1.0.1",
   748	        "es-errors": "^1.3.0",
   749	        "es-object-atoms": "^1.1.1",
   750	        "function-bind": "^1.1.2",
   751	        "get-proto": "^1.0.1",
   752	        "gopd": "^1.2.0",
   753	        "has-symbols": "^1.1.0",
   754	        "hasown": "^2.0.2",
   755	        "math-intrinsics": "^1.1.0"
   756	      },
   757	      "engines": {
   758	        "node": ">= 0.4"
   759	      },
   760	      "funding": {
   761	        "url": "https://github.com/sponsors/ljharb"
   762	      }
   763	    },
   764	    "node_modules/get-proto": {
   765	      "version": "1.0.1",
   766	      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
   767	      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
   768	      "license": "MIT",
   769	      "dependencies": {
   770	        "dunder-proto": "^1.0.1",
   771	        "es-object-atoms": "^1.0.0"
   772	      },
   773	      "engines": {
   774	        "node": ">= 0.4"
   775	      }
   776	    },
   777	    "node_modules/glob-parent": {
   778	      "version": "5.1.2",
   779	      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
   780	      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
   781	      "dev": true,
   782	      "license": "ISC",
   783	      "dependencies": {
   784	        "is-glob": "^4.0.1"
   785	      },
   786	      "engines": {
   787	        "node": ">= 6"
   788	      }
   789	    },
   790	    "node_modules/gopd": {
   791	      "version": "1.2.0",
   792	      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
   793	      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
   794	      "license": "MIT",
   795	      "engines": {
   796	        "node": ">= 0.4"
   797	      },
   798	      "funding": {
   799	        "url": "https://github.com/sponsors/ljharb"
   800	      }
   801	    },
   802	    "node_modules/has-flag": {
   803	      "version": "3.0.0",
   804	      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
   805	      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
   806	      "dev": true,
   807	      "license": "MIT",
   808	      "engines": {
   809	        "node": ">=4"
   810	      }
   811	    },
   812	    "node_modules/has-symbols": {
   813	      "version": "1.1.0",
   814	      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
   815	      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
   816	      "license": "MIT",
   817	      "engines": {
   818	        "node": ">= 0.4"
   819	      },
   820	      "funding": {
   821	        "url": "https://github.com/sponsors/ljharb"
   822	      }
   823	    },
   824	    "node_modules/hasown": {
   825	      "version": "2.0.2",
   826	      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
   827	      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
   828	      "license": "MIT",
   829	      "dependencies": {
   830	        "function-bind": "^1.1.2"
   831	      },
   832	      "engines": {
   833	        "node": ">= 0.4"
   834	      }
   835	    },
   836	    "node_modules/http-errors": {
   837	      "version": "2.0.0",
   838	      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
   839	      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
   840	      "license": "MIT",
   841	      "dependencies": {
   842	        "depd": "2.0.0",
   843	        "inherits": "2.0.4",
   844	        "setprototypeof": "1.2.0",
   845	        "statuses": "2.0.1",
   846	        "toidentifier": "1.0.1"
   847	      },
   848	      "engines": {
   849	        "node": ">= 0.8"
   850	      }
   851	    },
   852	    "node_modules/http-errors/node_modules/statuses": {
   853	      "version": "2.0.1",
   854	      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
   855	      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
   856	      "license": "MIT",
   857	      "engines": {
   858	        "node": ">= 0.8"
   859	      }
   860	    },
   861	    "node_modules/iconv-lite": {
   862	      "version": "0.6.3",
   863	      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
   864	      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
   865	      "license": "MIT",
   866	      "dependencies": {
   867	        "safer-buffer": ">= 2.1.2 < 3.0.0"
   868	      },
   869	      "engines": {
   870	        "node": ">=0.10.0"
   871	      }
   872	    },
   873	    "node_modules/ignore-by-default": {
   874	      "version": "1.0.1",
   875	      "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
   876	      "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
   877	      "dev": true,
   878	      "license": "ISC"
   879	    },
   880	    "node_modules/inherits": {
   881	      "version": "2.0.4",
   882	      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
   883	      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
   884	      "license": "ISC"
   885	    },
   886	    "node_modules/ipaddr.js": {
   887	      "version": "1.9.1",
   888	      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
   889	      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
   890	      "license": "MIT",
   891	      "engines": {
   892	        "node": ">= 0.10"
   893	      }
   894	    },
   895	    "node_modules/is-binary-path": {
   896	      "version": "2.1.0",
   897	      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
   898	      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
   899	      "dev": true,
   900	      "license": "MIT",
   901	      "dependencies": {
   902	        "binary-extensions": "^2.0.0"
   903	      },
   904	      "engines": {
   905	        "node": ">=8"
   906	      }
   907	    },
   908	    "node_modules/is-extglob": {
   909	      "version": "2.1.1",
   910	      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
   911	      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
   912	      "dev": true,
   913	      "license": "MIT",
   914	      "engines": {
   915	        "node": ">=0.10.0"
   916	      }
   917	    },
   918	    "node_modules/is-fullwidth-code-point": {
   919	      "version": "3.0.0",
   920	      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
   921	      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
   922	      "license": "MIT",
   923	      "engines": {
   924	        "node": ">=8"
   925	      }
   926	    },
   927	    "node_modules/is-glob": {
   928	      "version": "4.0.3",
   929	      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
   930	      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
   931	      "dev": true,
   932	      "license": "MIT",
   933	      "dependencies": {
   934	        "is-extglob": "^2.1.1"
   935	      },
   936	      "engines": {
   937	        "node": ">=0.10.0"
   938	      }
   939	    },
   940	    "node_modules/is-number": {
   941	      "version": "7.0.0",
   942	      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
   943	      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
   944	      "dev": true,
   945	      "license": "MIT",
   946	      "engines": {
   947	        "node": ">=0.12.0"
   948	      }
   949	    },
   950	    "node_modules/is-promise": {
   951	      "version": "4.0.0",
   952	      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-4.0.0.tgz",
   953	      "integrity": "sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==",
   954	      "license": "MIT"
   955	    },
   956	    "node_modules/jsonwebtoken": {
   957	      "version": "9.0.2",
   958	      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",
   959	      "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",
   960	      "license": "MIT",
   961	      "dependencies": {
   962	        "jws": "^3.2.2",
   963	        "lodash.includes": "^4.3.0",
   964	        "lodash.isboolean": "^3.0.3",
   965	        "lodash.isinteger": "^4.0.4",
   966	        "lodash.isnumber": "^3.0.3",
   967	        "lodash.isplainobject": "^4.0.6",
   968	        "lodash.isstring": "^4.0.1",
   969	        "lodash.once": "^4.0.0",
   970	        "ms": "^2.1.1",
   971	        "semver": "^7.5.4"
   972	      },
   973	      "engines": {
   974	        "node": ">=12",
   975	        "npm": ">=6"
   976	      }
   977	    },
   978	    "node_modules/jwa": {
   979	      "version": "1.4.2",
   980	      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz",
   981	      "integrity": "sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==",
   982	      "license": "MIT",
   983	      "dependencies": {
   984	        "buffer-equal-constant-time": "^1.0.1",
   985	        "ecdsa-sig-formatter": "1.0.11",
   986	        "safe-buffer": "^5.0.1"
   987	      }
   988	    },
   989	    "node_modules/jws": {
   990	      "version": "3.2.2",
   991	      "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
   992	      "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
   993	      "license": "MIT",
   994	      "dependencies": {
   995	        "jwa": "^1.4.1",
   996	        "safe-buffer": "^5.0.1"
   997	      }
   998	    },
   999	    "node_modules/locate-path": {
  1000	      "version": "5.0.0",
  1001	      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
  1002	      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
  1003	      "license": "MIT",
  1004	      "dependencies": {
  1005	        "p-locate": "^4.1.0"
  1006	      },
  1007	      "engines": {
  1008	        "node": ">=8"
  1009	      }
  1010	    },
  1011	    "node_modules/lodash.includes": {
  1012	      "version": "4.3.0",
  1013	      "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
  1014	      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==",
  1015	      "license": "MIT"
  1016	    },
  1017	    "node_modules/lodash.isboolean": {
  1018	      "version": "3.0.3",
  1019	      "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
  1020	      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==",
  1021	      "license": "MIT"
  1022	    },
  1023	    "node_modules/lodash.isinteger": {
  1024	      "version": "4.0.4",
  1025	      "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
  1026	      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==",
  1027	      "license": "MIT"
  1028	    },
  1029	    "node_modules/lodash.isnumber": {
  1030	      "version": "3.0.3",
  1031	      "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
  1032	      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==",
  1033	      "license": "MIT"
  1034	    },
  1035	    "node_modules/lodash.isplainobject": {
  1036	      "version": "4.0.6",
  1037	      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
  1038	      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
  1039	      "license": "MIT"
  1040	    },
  1041	    "node_modules/lodash.isstring": {
  1042	      "version": "4.0.1",
  1043	      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
  1044	      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
  1045	      "license": "MIT"
  1046	    },
  1047	    "node_modules/lodash.once": {
  1048	      "version": "4.1.1",
  1049	      "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
  1050	      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==",
  1051	      "license": "MIT"
  1052	    },
  1053	    "node_modules/math-intrinsics": {
  1054	      "version": "1.1.0",
  1055	      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
  1056	      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
  1057	      "license": "MIT",
  1058	      "engines": {
  1059	        "node": ">= 0.4"
  1060	      }
  1061	    },
  1062	    "node_modules/media-typer": {
  1063	      "version": "1.1.0",
  1064	      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-1.1.0.tgz",
  1065	      "integrity": "sha512-aisnrDP4GNe06UcKFnV5bfMNPBUw4jsLGaWwWfnH3v02GnBuXX2MCVn5RbrWo0j3pczUilYblq7fQ7Nw2t5XKw==",
  1066	      "license": "MIT",
  1067	      "engines": {
  1068	        "node": ">= 0.8"
  1069	      }
  1070	    },
  1071	    "node_modules/merge-descriptors": {
  1072	      "version": "2.0.0",
  1073	      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-2.0.0.tgz",
  1074	      "integrity": "sha512-Snk314V5ayFLhp3fkUREub6WtjBfPdCPY1Ln8/8munuLuiYhsABgBVWsozAG+MWMbVEvcdcpbi9R7ww22l9Q3g==",
  1075	      "license": "MIT",
  1076	      "engines": {
  1077	        "node": ">=18"
  1078	      },
  1079	      "funding": {
  1080	        "url": "https://github.com/sponsors/sindresorhus"
  1081	      }
  1082	    },
  1083	    "node_modules/mime-db": {
  1084	      "version": "1.54.0",
  1085	      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.54.0.tgz",
  1086	      "integrity": "sha512-aU5EJuIN2WDemCcAp2vFBfp/m4EAhWJnUNSSw0ixs7/kXbd6Pg64EmwJkNdFhB8aWt1sH2CTXrLxo/iAGV3oPQ==",
  1087	      "license": "MIT",
  1088	      "engines": {
  1089	        "node": ">= 0.6"
  1090	      }
  1091	    },
  1092	    "node_modules/mime-types": {
  1093	      "version": "3.0.1",
  1094	      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-3.0.1.tgz",
  1095	      "integrity": "sha512-xRc4oEhT6eaBpU1XF7AjpOFD+xQmXNB5OVKwp4tqCuBpHLS/ZbBDrc07mYTDqVMg6PfxUjjNp85O6Cd2Z/5HWA==",
  1096	      "license": "MIT",
  1097	      "dependencies": {
  1098	        "mime-db": "^1.54.0"
  1099	      },
  1100	      "engines": {
  1101	        "node": ">= 0.6"
  1102	      }
  1103	    },
  1104	    "node_modules/minimatch": {
  1105	      "version": "3.1.2",
  1106	      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
  1107	      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
  1108	      "dev": true,
  1109	      "license": "ISC",
  1110	      "dependencies": {
  1111	        "brace-expansion": "^1.1.7"
  1112	      },
  1113	      "engines": {
  1114	        "node": "*"
  1115	      }
  1116	    },
  1117	    "node_modules/minimist": {
  1118	      "version": "1.2.8",
  1119	      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
  1120	      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
  1121	      "license": "MIT",
  1122	      "funding": {
  1123	        "url": "https://github.com/sponsors/ljharb"
  1124	      }
  1125	    },
  1126	    "node_modules/ms": {
  1127	      "version": "2.1.3",
  1128	      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
  1129	      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
  1130	      "license": "MIT"
  1131	    },
  1132	    "node_modules/multer": {
  1133	      "version": "2.0.1",
  1134	      "resolved": "https://registry.npmjs.org/multer/-/multer-2.0.1.tgz",
  1135	      "integrity": "sha512-Ug8bXeTIUlxurg8xLTEskKShvcKDZALo1THEX5E41pYCD2sCVub5/kIRIGqWNoqV6szyLyQKV6mD4QUrWE5GCQ==",
  1136	      "license": "MIT",
  1137	      "dependencies": {
  1138	        "append-field": "^1.0.0",
  1139	        "busboy": "^1.6.0",
  1140	        "concat-stream": "^2.0.0",
  1141	        "mkdirp": "^0.5.6",
  1142	        "object-assign": "^4.1.1",
  1143	        "type-is": "^1.6.18",
  1144	        "xtend": "^4.0.2"
  1145	      },
  1146	      "engines": {
  1147	        "node": ">= 10.16.0"
  1148	      }
  1149	    },
  1150	    "node_modules/multer/node_modules/media-typer": {
  1151	      "version": "0.3.0",
  1152	      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
  1153	      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
  1154	      "license": "MIT",
  1155	      "engines": {
  1156	        "node": ">= 0.6"
  1157	      }
  1158	    },
  1159	    "node_modules/multer/node_modules/mime-db": {
  1160	      "version": "1.52.0",
  1161	      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
  1162	      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
  1163	      "license": "MIT",
  1164	      "engines": {
  1165	        "node": ">= 0.6"
  1166	      }
  1167	    },
  1168	    "node_modules/multer/node_modules/mime-types": {
  1169	      "version": "2.1.35",
  1170	      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
  1171	      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
  1172	      "license": "MIT",
  1173	      "dependencies": {
  1174	        "mime-db": "1.52.0"
  1175	      },
  1176	      "engines": {
  1177	        "node": ">= 0.6"
  1178	      }
  1179	    },
  1180	    "node_modules/multer/node_modules/mkdirp": {
  1181	      "version": "0.5.6",
  1182	      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
  1183	      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
  1184	      "license": "MIT",
  1185	      "dependencies": {
  1186	        "minimist": "^1.2.6"
  1187	      },
  1188	      "bin": {
  1189	        "mkdirp": "bin/cmd.js"
  1190	      }
  1191	    },
  1192	    "node_modules/multer/node_modules/type-is": {
  1193	      "version": "1.6.18",
  1194	      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
  1195	      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
  1196	      "license": "MIT",
  1197	      "dependencies": {
  1198	        "media-typer": "0.3.0",
  1199	        "mime-types": "~2.1.24"
  1200	      },
  1201	      "engines": {
  1202	        "node": ">= 0.6"
  1203	      }
  1204	    },
  1205	    "node_modules/negotiator": {
  1206	      "version": "1.0.0",
  1207	      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-1.0.0.tgz",
  1208	      "integrity": "sha512-8Ofs/AUQh8MaEcrlq5xOX0CQ9ypTF5dl78mjlMNfOK08fzpgTHQRQPBxcPlEtIw0yRpws+Zo/3r+5WRby7u3Gg==",
  1209	      "license": "MIT",
  1210	      "engines": {
  1211	        "node": ">= 0.6"
  1212	      }
  1213	    },
  1214	    "node_modules/node-fetch": {
  1215	      "version": "2.7.0",
  1216	      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
  1217	      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
  1218	      "license": "MIT",
  1219	      "dependencies": {
  1220	        "whatwg-url": "^5.0.0"
  1221	      },
  1222	      "engines": {
  1223	        "node": "4.x || >=6.0.0"
  1224	      },
  1225	      "peerDependencies": {
  1226	        "encoding": "^0.1.0"
  1227	      },
  1228	      "peerDependenciesMeta": {
  1229	        "encoding": {
  1230	          "optional": true
  1231	        }
  1232	      }
  1233	    },
  1234	    "node_modules/nodemailer": {
  1235	      "version": "7.0.4",
  1236	      "resolved": "https://registry.npmjs.org/nodemailer/-/nodemailer-7.0.4.tgz",
  1237	      "integrity": "sha512-9O00Vh89/Ld2EcVCqJ/etd7u20UhME0f/NToPfArwPEe1Don1zy4mAIz6ariRr7mJ2RDxtaDzN0WJVdVXPtZaw==",
  1238	      "license": "MIT-0",
  1239	      "engines": {
  1240	        "node": ">=6.0.0"
  1241	      }
  1242	    },
  1243	    "node_modules/nodemon": {
  1244	      "version": "2.0.22",
  1245	      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-2.0.22.tgz",
  1246	      "integrity": "sha512-B8YqaKMmyuCO7BowF1Z1/mkPqLk6cs/l63Ojtd6otKjMx47Dq1utxfRxcavH1I7VSaL8n5BUaoutadnsX3AAVQ==",
  1247	      "dev": true,
  1248	      "license": "MIT",
  1249	      "dependencies": {
  1250	        "chokidar": "^3.5.2",
  1251	        "debug": "^3.2.7",
  1252	        "ignore-by-default": "^1.0.1",
  1253	        "minimatch": "^3.1.2",
  1254	        "pstree.remy": "^1.1.8",
  1255	        "semver": "^5.7.1",
  1256	        "simple-update-notifier": "^1.0.7",
  1257	        "supports-color": "^5.5.0",
  1258	        "touch": "^3.1.0",
  1259	        "undefsafe": "^2.0.5"
  1260	      },
  1261	      "bin": {
  1262	        "nodemon": "bin/nodemon.js"
  1263	      },
  1264	      "engines": {
  1265	        "node": ">=8.10.0"
  1266	      },
  1267	      "funding": {
  1268	        "type": "opencollective",
  1269	        "url": "https://opencollective.com/nodemon"
  1270	      }
  1271	    },
  1272	    "node_modules/nodemon/node_modules/debug": {
  1273	      "version": "3.2.7",
  1274	      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
  1275	      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
  1276	      "dev": true,
  1277	      "license": "MIT",
  1278	      "dependencies": {
  1279	        "ms": "^2.1.1"
  1280	      }
  1281	    },
  1282	    "node_modules/nodemon/node_modules/semver": {
  1283	      "version": "5.7.2",
  1284	      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.2.tgz",
  1285	      "integrity": "sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==",
  1286	      "dev": true,
  1287	      "license": "ISC",
  1288	      "bin": {
  1289	        "semver": "bin/semver"
  1290	      }
  1291	    },
  1292	    "node_modules/normalize-path": {
  1293	      "version": "3.0.0",
  1294	      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
  1295	      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
  1296	      "dev": true,
  1297	      "license": "MIT",
  1298	      "engines": {
  1299	        "node": ">=0.10.0"
  1300	      }
  1301	    },
  1302	    "node_modules/oauth": {
  1303	      "version": "0.10.2",
  1304	      "resolved": "https://registry.npmjs.org/oauth/-/oauth-0.10.2.tgz",
  1305	      "integrity": "sha512-JtFnB+8nxDEXgNyniwz573xxbKSOu3R8D40xQKqcjwJ2CDkYqUDI53o6IuzDJBx60Z8VKCm271+t8iFjakrl8Q==",
  1306	      "license": "MIT"
  1307	    },
  1308	    "node_modules/object-assign": {
  1309	      "version": "4.1.1",
  1310	      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
  1311	      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
  1312	      "license": "MIT",
  1313	      "engines": {
  1314	        "node": ">=0.10.0"
  1315	      }
  1316	    },
  1317	    "node_modules/object-inspect": {
  1318	      "version": "1.13.4",
  1319	      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
  1320	      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
  1321	      "license": "MIT",
  1322	      "engines": {
  1323	        "node": ">= 0.4"
  1324	      },
  1325	      "funding": {
  1326	        "url": "https://github.com/sponsors/ljharb"
  1327	      }
  1328	    },
  1329	    "node_modules/on-finished": {
  1330	      "version": "2.4.1",
  1331	      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
  1332	      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
  1333	      "license": "MIT",
  1334	      "dependencies": {
  1335	        "ee-first": "1.1.1"
  1336	      },
  1337	      "engines": {
  1338	        "node": ">= 0.8"
  1339	      }
  1340	    },
  1341	    "node_modules/on-headers": {
  1342	      "version": "1.0.2",
  1343	      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
  1344	      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==",
  1345	      "license": "MIT",
  1346	      "engines": {
  1347	        "node": ">= 0.8"
  1348	      }
  1349	    },
  1350	    "node_modules/once": {
  1351	      "version": "1.4.0",
  1352	      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
  1353	      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
  1354	      "license": "ISC",
  1355	      "dependencies": {
  1356	        "wrappy": "1"
  1357	      }
  1358	    },
  1359	    "node_modules/p-limit": {
  1360	      "version": "2.3.0",
  1361	      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
  1362	      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
  1363	      "license": "MIT",
  1364	      "dependencies": {
  1365	        "p-try": "^2.0.0"
  1366	      },
  1367	      "engines": {
  1368	        "node": ">=6"
  1369	      },
  1370	      "funding": {
  1371	        "url": "https://github.com/sponsors/sindresorhus"
  1372	      }
  1373	    },
  1374	    "node_modules/p-locate": {
  1375	      "version": "4.1.0",
  1376	      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
  1377	      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
  1378	      "license": "MIT",
  1379	      "dependencies": {
  1380	        "p-limit": "^2.2.0"
  1381	      },
  1382	      "engines": {
  1383	        "node": ">=8"
  1384	      }
  1385	    },
  1386	    "node_modules/p-try": {
  1387	      "version": "2.2.0",
  1388	      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
  1389	      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
  1390	      "license": "MIT",
  1391	      "engines": {
  1392	        "node": ">=6"
  1393	      }
  1394	    },
  1395	    "node_modules/parseurl": {
  1396	      "version": "1.3.3",
  1397	      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
  1398	      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
  1399	      "license": "MIT",
  1400	      "engines": {
  1401	        "node": ">= 0.8"
  1402	      }
  1403	    },
  1404	    "node_modules/passport": {
  1405	      "version": "0.7.0",
  1406	      "resolved": "https://registry.npmjs.org/passport/-/passport-0.7.0.tgz",
  1407	      "integrity": "sha512-cPLl+qZpSc+ireUvt+IzqbED1cHHkDoVYMo30jbJIdOOjQ1MQYZBPiNvmi8UM6lJuOpTPXJGZQk0DtC4y61MYQ==",
  1408	      "license": "MIT",
  1409	      "dependencies": {
  1410	        "passport-strategy": "1.x.x",
  1411	        "pause": "0.0.1",
  1412	        "utils-merge": "^1.0.1"
  1413	      },
  1414	      "engines": {
  1415	        "node": ">= 0.4.0"
  1416	      },
  1417	      "funding": {
  1418	        "type": "github",
  1419	        "url": "https://github.com/sponsors/jaredhanson"
  1420	      }
  1421	    },
  1422	    "node_modules/passport-google-oauth20": {
  1423	      "version": "2.0.0",
  1424	      "resolved": "https://registry.npmjs.org/passport-google-oauth20/-/passport-google-oauth20-2.0.0.tgz",
  1425	      "integrity": "sha512-KSk6IJ15RoxuGq7D1UKK/8qKhNfzbLeLrG3gkLZ7p4A6DBCcv7xpyQwuXtWdpyR0+E0mwkpjY1VfPOhxQrKzdQ==",
  1426	      "license": "MIT",
  1427	      "dependencies": {
  1428	        "passport-oauth2": "1.x.x"
  1429	      },
  1430	      "engines": {
  1431	        "node": ">= 0.4.0"
  1432	      }
  1433	    },
  1434	    "node_modules/passport-oauth2": {
  1435	      "version": "1.8.0",
  1436	      "resolved": "https://registry.npmjs.org/passport-oauth2/-/passport-oauth2-1.8.0.tgz",
  1437	      "integrity": "sha512-cjsQbOrXIDE4P8nNb3FQRCCmJJ/utnFKEz2NX209f7KOHPoX18gF7gBzBbLLsj2/je4KrgiwLLGjf0lm9rtTBA==",
  1438	      "license": "MIT",
  1439	      "dependencies": {
  1440	        "base64url": "3.x.x",
  1441	        "oauth": "0.10.x",
  1442	        "passport-strategy": "1.x.x",
  1443	        "uid2": "0.0.x",
  1444	        "utils-merge": "1.x.x"
  1445	      },
  1446	      "engines": {
  1447	        "node": ">= 0.4.0"
  1448	      },
  1449	      "funding": {
  1450	        "type": "github",
  1451	        "url": "https://github.com/sponsors/jaredhanson"
  1452	      }
  1453	    },
  1454	    "node_modules/passport-strategy": {
  1455	      "version": "1.0.0",
  1456	      "resolved": "https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz",
  1457	      "integrity": "sha512-CB97UUvDKJde2V0KDWWB3lyf6PC3FaZP7YxZ2G8OAtn9p4HI9j9JLP9qjOGZFvyl8uwNT8qM+hGnz/n16NI7oA==",
  1458	      "engines": {
  1459	        "node": ">= 0.4.0"
  1460	      }
  1461	    },
  1462	    "node_modules/path-exists": {
  1463	      "version": "4.0.0",
  1464	      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
  1465	      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
  1466	      "license": "MIT",
  1467	      "engines": {
  1468	        "node": ">=8"
  1469	      }
  1470	    },
  1471	    "node_modules/path-to-regexp": {
  1472	      "version": "8.2.0",
  1473	      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-8.2.0.tgz",
  1474	      "integrity": "sha512-TdrF7fW9Rphjq4RjrW0Kp2AW0Ahwu9sRGTkS6bvDi0SCwZlEZYmcfDbEsTz8RVk0EHIS/Vd1bv3JhG+1xZuAyQ==",
  1475	      "license": "MIT",
  1476	      "engines": {
  1477	        "node": ">=16"
  1478	      }
  1479	    },
  1480	    "node_modules/pause": {
  1481	      "version": "0.0.1",
  1482	      "resolved": "https://registry.npmjs.org/pause/-/pause-0.0.1.tgz",
  1483	      "integrity": "sha512-KG8UEiEVkR3wGEb4m5yZkVCzigAD+cVEJck2CzYZO37ZGJfctvVptVO192MwrtPhzONn6go8ylnOdMhKqi4nfg=="
  1484	    },
  1485	    "node_modules/pg": {
  1486	      "version": "8.16.3",
  1487	      "resolved": "https://registry.npmjs.org/pg/-/pg-8.16.3.tgz",
  1488	      "integrity": "sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==",
  1489	      "dependencies": {
  1490	        "pg-connection-string": "^2.9.1",
  1491	        "pg-pool": "^3.10.1",
  1492	        "pg-protocol": "^1.10.3",
  1493	        "pg-types": "2.2.0",
  1494	        "pgpass": "1.0.5"
  1495	      },
  1496	      "engines": {
  1497	        "node": ">= 16.0.0"
  1498	      },
  1499	      "optionalDependencies": {
  1500	        "pg-cloudflare": "^1.2.7"
  1501	      },
  1502	      "peerDependencies": {
  1503	        "pg-native": ">=3.0.1"
  1504	      },
  1505	      "peerDependenciesMeta": {
  1506	        "pg-native": {
  1507	          "optional": true
  1508	        }
  1509	      }
  1510	    },
  1511	    "node_modules/pg-cloudflare": {
  1512	      "version": "1.2.7",
  1513	      "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.2.7.tgz",
  1514	      "integrity": "sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==",
  1515	      "optional": true
  1516	    },
  1517	    "node_modules/pg-connection-string": {
  1518	      "version": "2.9.1",
  1519	      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.9.1.tgz",
  1520	      "integrity": "sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w=="
  1521	    },
  1522	    "node_modules/pg-int8": {
  1523	      "version": "1.0.1",
  1524	      "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
  1525	      "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==",
  1526	      "engines": {
  1527	        "node": ">=4.0.0"
  1528	      }
  1529	    },
  1530	    "node_modules/pg-pool": {
  1531	      "version": "3.10.1",
  1532	      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.10.1.tgz",
  1533	      "integrity": "sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==",
  1534	      "peerDependencies": {
  1535	        "pg": ">=8.0"
  1536	      }
  1537	    },
  1538	    "node_modules/pg-protocol": {
  1539	      "version": "1.10.3",
  1540	      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.10.3.tgz",
  1541	      "integrity": "sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ=="
  1542	    },
  1543	    "node_modules/pg-types": {
  1544	      "version": "2.2.0",
  1545	      "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
  1546	      "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
  1547	      "dependencies": {
  1548	        "pg-int8": "1.0.1",
  1549	        "postgres-array": "~2.0.0",
  1550	        "postgres-bytea": "~1.0.0",
  1551	        "postgres-date": "~1.0.4",
  1552	        "postgres-interval": "^1.1.0"
  1553	      },
  1554	      "engines": {
  1555	        "node": ">=4"
  1556	      }
  1557	    },
  1558	    "node_modules/pgpass": {
  1559	      "version": "1.0.5",
  1560	      "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
  1561	      "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
  1562	      "dependencies": {
  1563	        "split2": "^4.1.0"
  1564	      }
  1565	    },
  1566	    "node_modules/picomatch": {
  1567	      "version": "2.3.1",
  1568	      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
  1569	      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
  1570	      "dev": true,
  1571	      "license": "MIT",
  1572	      "engines": {
  1573	        "node": ">=8.6"
  1574	      },
  1575	      "funding": {
  1576	        "url": "https://github.com/sponsors/jonschlinkert"
  1577	      }
  1578	    },
  1579	    "node_modules/pngjs": {
  1580	      "version": "5.0.0",
  1581	      "resolved": "https://registry.npmjs.org/pngjs/-/pngjs-5.0.0.tgz",
  1582	      "integrity": "sha512-40QW5YalBNfQo5yRYmiw7Yz6TKKVr3h6970B2YE+3fQpsWcrbj1PzJgxeJ19DRQjhMbKPIuMY8rFaXc8moolVw==",
  1583	      "license": "MIT",
  1584	      "engines": {
  1585	        "node": ">=10.13.0"
  1586	      }
  1587	    },
  1588	    "node_modules/postgres-array": {
  1589	      "version": "2.0.0",
  1590	      "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
  1591	      "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
  1592	      "engines": {
  1593	        "node": ">=4"
  1594	      }
  1595	    },
  1596	    "node_modules/postgres-bytea": {
  1597	      "version": "1.0.0",
  1598	      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
  1599	      "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
  1600	      "engines": {
  1601	        "node": ">=0.10.0"
  1602	      }
  1603	    },
  1604	    "node_modules/postgres-date": {
  1605	      "version": "1.0.7",
  1606	      "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
  1607	      "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
  1608	      "engines": {
  1609	        "node": ">=0.10.0"
  1610	      }
  1611	    },
  1612	    "node_modules/postgres-interval": {
  1613	      "version": "1.2.0",
  1614	      "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
  1615	      "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
  1616	      "dependencies": {
  1617	        "xtend": "^4.0.0"
  1618	      },
  1619	      "engines": {
  1620	        "node": ">=0.10.0"
  1621	      }
  1622	    },
  1623	    "node_modules/proxy-addr": {
  1624	      "version": "2.0.7",
  1625	      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
  1626	      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
  1627	      "license": "MIT",
  1628	      "dependencies": {
  1629	        "forwarded": "0.2.0",
  1630	        "ipaddr.js": "1.9.1"
  1631	      },
  1632	      "engines": {
  1633	        "node": ">= 0.10"
  1634	      }
  1635	    },
  1636	    "node_modules/pstree.remy": {
  1637	      "version": "1.1.8",
  1638	      "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
  1639	      "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
  1640	      "dev": true,
  1641	      "license": "MIT"
  1642	    },
  1643	    "node_modules/qrcode": {
  1644	      "version": "1.5.4",
  1645	      "resolved": "https://registry.npmjs.org/qrcode/-/qrcode-1.5.4.tgz",
  1646	      "integrity": "sha512-1ca71Zgiu6ORjHqFBDpnSMTR2ReToX4l1Au1VFLyVeBTFavzQnv5JxMFr3ukHVKpSrSA2MCk0lNJSykjUfz7Zg==",
  1647	      "license": "MIT",
  1648	      "dependencies": {
  1649	        "dijkstrajs": "^1.0.1",
  1650	        "pngjs": "^5.0.0",
  1651	        "yargs": "^15.3.1"
  1652	      },
  1653	      "bin": {
  1654	        "qrcode": "bin/qrcode"
  1655	      },
  1656	      "engines": {
  1657	        "node": ">=10.13.0"
  1658	      }
  1659	    },
  1660	    "node_modules/qs": {
  1661	      "version": "6.14.0",
  1662	      "resolved": "https://registry.npmjs.org/qs/-/qs-6.14.0.tgz",
  1663	      "integrity": "sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==",
  1664	      "license": "BSD-3-Clause",
  1665	      "dependencies": {
  1666	        "side-channel": "^1.1.0"
  1667	      },
  1668	      "engines": {
  1669	        "node": ">=0.6"
  1670	      },
  1671	      "funding": {
  1672	        "url": "https://github.com/sponsors/ljharb"
  1673	      }
  1674	    },
  1675	    "node_modules/random-bytes": {
  1676	      "version": "1.0.0",
  1677	      "resolved": "https://registry.npmjs.org/random-bytes/-/random-bytes-1.0.0.tgz",
  1678	      "integrity": "sha512-iv7LhNVO047HzYR3InF6pUcUsPQiHTM1Qal51DcGSuZFBil1aBBWG5eHPNek7bvILMaYJ/8RU1e8w1AMdHmLQQ==",
  1679	      "license": "MIT",
  1680	      "engines": {
  1681	        "node": ">= 0.8"
  1682	      }
  1683	    },
  1684	    "node_modules/range-parser": {
  1685	      "version": "1.2.1",
  1686	      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
  1687	      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
  1688	      "license": "MIT",
  1689	      "engines": {
  1690	        "node": ">= 0.6"
  1691	      }
  1692	    },
  1693	    "node_modules/raw-body": {
  1694	      "version": "3.0.0",
  1695	      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-3.0.0.tgz",
  1696	      "integrity": "sha512-RmkhL8CAyCRPXCE28MMH0z2PNWQBNk2Q09ZdxM9IOOXwxwZbN+qbWaatPkdkWIKL2ZVDImrN/pK5HTRz2PcS4g==",
  1697	      "license": "MIT",
  1698	      "dependencies": {
  1699	        "bytes": "3.1.2",
  1700	        "http-errors": "2.0.0",
  1701	        "iconv-lite": "0.6.3",
  1702	        "unpipe": "1.0.0"
  1703	      },
  1704	      "engines": {
  1705	        "node": ">= 0.8"
  1706	      }
  1707	    },
  1708	    "node_modules/readable-stream": {
  1709	      "version": "3.6.2",
  1710	      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
  1711	      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
  1712	      "license": "MIT",
  1713	      "dependencies": {
  1714	        "inherits": "^2.0.3",
  1715	        "string_decoder": "^1.1.1",
  1716	        "util-deprecate": "^1.0.1"
  1717	      },
  1718	      "engines": {
  1719	        "node": ">= 6"
  1720	      }
  1721	    },
  1722	    "node_modules/readdirp": {
  1723	      "version": "3.6.0",
  1724	      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
  1725	      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
  1726	      "dev": true,
  1727	      "license": "MIT",
  1728	      "dependencies": {
  1729	        "picomatch": "^2.2.1"
  1730	      },
  1731	      "engines": {
  1732	        "node": ">=8.10.0"
  1733	      }
  1734	    },
  1735	    "node_modules/require-directory": {
  1736	      "version": "2.1.1",
  1737	      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
  1738	      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
  1739	      "license": "MIT",
  1740	      "engines": {
  1741	        "node": ">=0.10.0"
  1742	      }
  1743	    },
  1744	    "node_modules/require-main-filename": {
  1745	      "version": "2.0.0",
  1746	      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
  1747	      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
  1748	      "license": "ISC"
  1749	    },
  1750	    "node_modules/router": {
  1751	      "version": "2.2.0",
  1752	      "resolved": "https://registry.npmjs.org/router/-/router-2.2.0.tgz",
  1753	      "integrity": "sha512-nLTrUKm2UyiL7rlhapu/Zl45FwNgkZGaCpZbIHajDYgwlJCOzLSk+cIPAnsEqV955GjILJnKbdQC1nVPz+gAYQ==",
  1754	      "license": "MIT",
  1755	      "dependencies": {
  1756	        "debug": "^4.4.0",
  1757	        "depd": "^2.0.0",
  1758	        "is-promise": "^4.0.0",
  1759	        "parseurl": "^1.3.3",
  1760	        "path-to-regexp": "^8.0.0"
  1761	      },
  1762	      "engines": {
  1763	        "node": ">= 18"
  1764	      }
  1765	    },
  1766	    "node_modules/safe-buffer": {
  1767	      "version": "5.2.1",
  1768	      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
  1769	      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
  1770	      "funding": [
  1771	        {
  1772	          "type": "github",
  1773	          "url": "https://github.com/sponsors/feross"
  1774	        },
  1775	        {
  1776	          "type": "patreon",
  1777	          "url": "https://www.patreon.com/feross"
  1778	        },
  1779	        {
  1780	          "type": "consulting",
  1781	          "url": "https://feross.org/support"
  1782	        }
  1783	      ],
  1784	      "license": "MIT"
  1785	    },
  1786	    "node_modules/safer-buffer": {
  1787	      "version": "2.1.2",
  1788	      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
  1789	      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
  1790	      "license": "MIT"
  1791	    },
  1792	    "node_modules/semver": {
  1793	      "version": "7.7.2",
  1794	      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
  1795	      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
  1796	      "license": "ISC",
  1797	      "bin": {
  1798	        "semver": "bin/semver.js"
  1799	      },
  1800	      "engines": {
  1801	        "node": ">=10"
  1802	      }
  1803	    },
  1804	    "node_modules/send": {
  1805	      "version": "1.2.0",
  1806	      "resolved": "https://registry.npmjs.org/send/-/send-1.2.0.tgz",
  1807	      "integrity": "sha512-uaW0WwXKpL9blXE2o0bRhoL2EGXIrZxQ2ZQ4mgcfoBxdFmQold+qWsD2jLrfZ0trjKL6vOw0j//eAwcALFjKSw==",
  1808	      "license": "MIT",
  1809	      "dependencies": {
  1810	        "debug": "^4.3.5",
  1811	        "encodeurl": "^2.0.0",
  1812	        "escape-html": "^1.0.3",
  1813	        "etag": "^1.8.1",
  1814	        "fresh": "^2.0.0",
  1815	        "http-errors": "^2.0.0",
  1816	        "mime-types": "^3.0.1",
  1817	        "ms": "^2.1.3",
  1818	        "on-finished": "^2.4.1",
  1819	        "range-parser": "^1.2.1",
  1820	        "statuses": "^2.0.1"
  1821	      },
  1822	      "engines": {
  1823	        "node": ">= 18"
  1824	      }
  1825	    },
  1826	    "node_modules/serve-static": {
  1827	      "version": "2.2.0",
  1828	      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-2.2.0.tgz",
  1829	      "integrity": "sha512-61g9pCh0Vnh7IutZjtLGGpTA355+OPn2TyDv/6ivP2h/AdAVX9azsoxmg2/M6nZeQZNYBEwIcsne1mJd9oQItQ==",
  1830	      "license": "MIT",
  1831	      "dependencies": {
  1832	        "encodeurl": "^2.0.0",
  1833	        "escape-html": "^1.0.3",
  1834	        "parseurl": "^1.3.3",
  1835	        "send": "^1.2.0"
  1836	      },
  1837	      "engines": {
  1838	        "node": ">= 18"
  1839	      }
  1840	    },
  1841	    "node_modules/set-blocking": {
  1842	      "version": "2.0.0",
  1843	      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
  1844	      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==",
  1845	      "license": "ISC"
  1846	    },
  1847	    "node_modules/setprototypeof": {
  1848	      "version": "1.2.0",
  1849	      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
  1850	      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
  1851	      "license": "ISC"
  1852	    },
  1853	    "node_modules/side-channel": {
  1854	      "version": "1.1.0",
  1855	      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
  1856	      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
  1857	      "license": "MIT",
  1858	      "dependencies": {
  1859	        "es-errors": "^1.3.0",
  1860	        "object-inspect": "^1.13.3",
  1861	        "side-channel-list": "^1.0.0",
  1862	        "side-channel-map": "^1.0.1",
  1863	        "side-channel-weakmap": "^1.0.2"
  1864	      },
  1865	      "engines": {
  1866	        "node": ">= 0.4"
  1867	      },
  1868	      "funding": {
  1869	        "url": "https://github.com/sponsors/ljharb"
  1870	      }
  1871	    },
  1872	    "node_modules/side-channel-list": {
  1873	      "version": "1.0.0",
  1874	      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
  1875	      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
  1876	      "license": "MIT",
  1877	      "dependencies": {
  1878	        "es-errors": "^1.3.0",
  1879	        "object-inspect": "^1.13.3"
  1880	      },
  1881	      "engines": {
  1882	        "node": ">= 0.4"
  1883	      },
  1884	      "funding": {
  1885	        "url": "https://github.com/sponsors/ljharb"
  1886	      }
  1887	    },
  1888	    "node_modules/side-channel-map": {
  1889	      "version": "1.0.1",
  1890	      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
  1891	      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
  1892	      "license": "MIT",
  1893	      "dependencies": {
  1894	        "call-bound": "^1.0.2",
  1895	        "es-errors": "^1.3.0",
  1896	        "get-intrinsic": "^1.2.5",
  1897	        "object-inspect": "^1.13.3"
  1898	      },
  1899	      "engines": {
  1900	        "node": ">= 0.4"
  1901	      },
  1902	      "funding": {
  1903	        "url": "https://github.com/sponsors/ljharb"
  1904	      }
  1905	    },
  1906	    "node_modules/side-channel-weakmap": {
  1907	      "version": "1.0.2",
  1908	      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
  1909	      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
  1910	      "license": "MIT",
  1911	      "dependencies": {
  1912	        "call-bound": "^1.0.2",
  1913	        "es-errors": "^1.3.0",
  1914	        "get-intrinsic": "^1.2.5",
  1915	        "object-inspect": "^1.13.3",
  1916	        "side-channel-map": "^1.0.1"
  1917	      },
  1918	      "engines": {
  1919	        "node": ">= 0.4"
  1920	      },
  1921	      "funding": {
  1922	        "url": "https://github.com/sponsors/ljharb"
  1923	      }
  1924	    },
  1925	    "node_modules/simple-update-notifier": {
  1926	      "version": "1.1.0",
  1927	      "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-1.1.0.tgz",
  1928	      "integrity": "sha512-VpsrsJSUcJEseSbMHkrsrAVSdvVS5I96Qo1QAQ4FxQ9wXFcB+pjj7FB7/us9+GcgfW4ziHtYMc1J0PLczb55mg==",
  1929	      "dev": true,
  1930	      "license": "MIT",
  1931	      "dependencies": {
  1932	        "semver": "~7.0.0"
  1933	      },
  1934	      "engines": {
  1935	        "node": ">=8.10.0"
  1936	      }
  1937	    },
  1938	    "node_modules/simple-update-notifier/node_modules/semver": {
  1939	      "version": "7.0.0",
  1940	      "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
  1941	      "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
  1942	      "dev": true,
  1943	      "license": "ISC",
  1944	      "bin": {
  1945	        "semver": "bin/semver.js"
  1946	      }
  1947	    },
  1948	    "node_modules/speakeasy": {
  1949	      "version": "2.0.0",
  1950	      "resolved": "https://registry.npmjs.org/speakeasy/-/speakeasy-2.0.0.tgz",
  1951	      "integrity": "sha512-lW2A2s5LKi8rwu77ewisuUOtlCydF/hmQSOJjpTqTj1gZLkNgTaYnyvfxy2WBr4T/h+9c4g8HIITfj83OkFQFw==",
  1952	      "license": "MIT",
  1953	      "dependencies": {
  1954	        "base32.js": "0.0.1"
  1955	      },
  1956	      "engines": {
  1957	        "node": ">= 0.10.0"
  1958	      }
  1959	    },
  1960	    "node_modules/split2": {
  1961	      "version": "4.2.0",
  1962	      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
  1963	      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
  1964	      "engines": {
  1965	        "node": ">= 10.x"
  1966	      }
  1967	    },
  1968	    "node_modules/statuses": {
  1969	      "version": "2.0.2",
  1970	      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.2.tgz",
  1971	      "integrity": "sha512-DvEy55V3DB7uknRo+4iOGT5fP1slR8wQohVdknigZPMpMstaKJQWhwiYBACJE3Ul2pTnATihhBYnRhZQHGBiRw==",
  1972	      "license": "MIT",
  1973	      "engines": {
  1974	        "node": ">= 0.8"
  1975	      }
  1976	    },
  1977	    "node_modules/streamsearch": {
  1978	      "version": "1.1.0",
  1979	      "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
  1980	      "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==",
  1981	      "engines": {
  1982	        "node": ">=10.0.0"
  1983	      }
  1984	    },
  1985	    "node_modules/string_decoder": {
  1986	      "version": "1.3.0",
  1987	      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
  1988	      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
  1989	      "license": "MIT",
  1990	      "dependencies": {
  1991	        "safe-buffer": "~5.2.0"
  1992	      }
  1993	    },
  1994	    "node_modules/string-width": {
  1995	      "version": "4.2.3",
  1996	      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
  1997	      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
  1998	      "license": "MIT",
  1999	      "dependencies": {
  2000	        "emoji-regex": "^8.0.0",
  2001	        "is-fullwidth-code-point": "^3.0.0",
  2002	        "strip-ansi": "^6.0.1"
  2003	      },
  2004	      "engines": {
  2005	        "node": ">=8"
  2006	      }
  2007	    },
  2008	    "node_modules/strip-ansi": {
  2009	      "version": "6.0.1",
  2010	      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
  2011	      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
  2012	      "license": "MIT",
  2013	      "dependencies": {
  2014	        "ansi-regex": "^5.0.1"
  2015	      },
  2016	      "engines": {
  2017	        "node": ">=8"
  2018	      }
  2019	    },
  2020	    "node_modules/stripe": {
  2021	      "version": "18.3.0",
  2022	      "resolved": "https://registry.npmjs.org/stripe/-/stripe-18.3.0.tgz",
  2023	      "integrity": "sha512-FkxrTUUcWB4CVN2yzgsfF/YHD6WgYHduaa7VmokCy5TLCgl5UNJkwortxcedrxSavQ8Qfa4Ir4JxcbIYiBsyLg==",
  2024	      "license": "MIT",
  2025	      "dependencies": {
  2026	        "qs": "^6.11.0"
  2027	      },
  2028	      "engines": {
  2029	        "node": ">=12.*"
  2030	      },
  2031	      "peerDependencies": {
  2032	        "@types/node": ">=12.x.x"
  2033	      },
  2034	      "peerDependenciesMeta": {
  2035	        "@types/node": {
  2036	          "optional": true
  2037	        }
  2038	      }
  2039	    },
  2040	    "node_modules/supports-color": {
  2041	      "version": "5.5.0",
  2042	      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
  2043	      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
  2044	      "dev": true,
  2045	      "license": "MIT",
  2046	      "dependencies": {
  2047	        "has-flag": "^3.0.0"
  2048	      },
  2049	      "engines": {
  2050	        "node": ">=4"
  2051	      }
  2052	    },
  2053	    "node_modules/to-regex-range": {
  2054	      "version": "5.0.1",
  2055	      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
  2056	      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
  2057	      "dev": true,
  2058	      "license": "MIT",
  2059	      "dependencies": {
  2060	        "is-number": "^7.0.0"
  2061	      },
  2062	      "engines": {
  2063	        "node": ">=8.0"
  2064	      }
  2065	    },
  2066	    "node_modules/toidentifier": {
  2067	      "version": "1.0.1",
  2068	      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
  2069	      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
  2070	      "license": "MIT",
  2071	      "engines": {
  2072	        "node": ">=0.6"
  2073	      }
  2074	    },
  2075	    "node_modules/touch": {
  2076	      "version": "3.1.1",
  2077	      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.1.tgz",
  2078	      "integrity": "sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==",
  2079	      "dev": true,
  2080	      "license": "ISC",
  2081	      "bin": {
  2082	        "nodetouch": "bin/nodetouch.js"
  2083	      }
  2084	    },
  2085	    "node_modules/tr46": {
  2086	      "version": "0.0.3",
  2087	      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
  2088	      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
  2089	      "license": "MIT"
  2090	    },
  2091	    "node_modules/type-is": {
  2092	      "version": "2.0.1",
  2093	      "resolved": "https://registry.npmjs.org/type-is/-/type-is-2.0.1.tgz",
  2094	      "integrity": "sha512-OZs6gsjF4vMp32qrCbiVSkrFmXtG/AZhY3t0iAMrMBiAZyV9oALtXO8hsrHbMXF9x6L3grlFuwW2oAz7cav+Gw==",
  2095	      "license": "MIT",
  2096	      "dependencies": {
  2097	        "content-type": "^1.0.5",
  2098	        "media-typer": "^1.1.0",
  2099	        "mime-types": "^3.0.0"
  2100	      },
  2101	      "engines": {
  2102	        "node": ">= 0.6"
  2103	      }
  2104	    },
  2105	    "node_modules/typedarray": {
  2106	      "version": "0.0.6",
  2107	      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
  2108	      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==",
  2109	      "license": "MIT"
  2110	    },
  2111	    "node_modules/typescript": {
  2112	      "version": "4.9.5",
  2113	      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.9.5.tgz",
  2114	      "integrity": "sha512-1FXk9E2Hm+QzZQ7z+McJiHL4NW1F2EzMu9Nq9i3zAaGqibafqYwCVU6WyWAuyQRRzOlxou8xZSyXLEN8oKj24g==",
  2115	      "dev": true,
  2116	      "bin": {
  2117	        "tsc": "bin/tsc",
  2118	        "tsserver": "bin/tsserver"
  2119	      },
  2120	      "engines": {
  2121	        "node": ">=4.2.0"
  2122	      }
  2123	    },
  2124	    "node_modules/uid-safe": {
  2125	      "version": "2.1.5",
  2126	      "resolved": "https://registry.npmjs.org/uid-safe/-/uid-safe-2.1.5.tgz",
  2127	      "integrity": "sha512-KPHm4VL5dDXKz01UuEd88Df+KzynaohSL9fBh096KWAxSKZQDI2uBrVqtvRM4rwrIrRRKsdLNML/lnaaVSRioA==",
  2128	      "license": "MIT",
  2129	      "dependencies": {
  2130	        "random-bytes": "~1.0.0"
  2131	      },
  2132	      "engines": {
  2133	        "node": ">= 0.8"
  2134	      }
  2135	    },
  2136	    "node_modules/uid2": {
  2137	      "version": "0.0.4",
  2138	      "resolved": "https://registry.npmjs.org/uid2/-/uid2-0.0.4.tgz",
  2139	      "integrity": "sha512-IevTus0SbGwQzYh3+fRsAMTVVPOoIVufzacXcHPmdlle1jUpq7BRL+mw3dgeLanvGZdwwbWhRV6XrcFNdBmjWA==",
  2140	      "license": "MIT"
  2141	    },
  2142	    "node_modules/undefsafe": {
  2143	      "version": "2.0.5",
  2144	      "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
  2145	      "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
  2146	      "dev": true,
  2147	      "license": "MIT"
  2148	    },
  2149	    "node_modules/unpipe": {
  2150	      "version": "1.0.0",
  2151	      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
  2152	      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
  2153	      "license": "MIT",
  2154	      "engines": {
  2155	        "node": ">= 0.8"
  2156	      }
  2157	    },
  2158	    "node_modules/util-deprecate": {
  2159	      "version": "1.0.2",
  2160	      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
  2161	      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
  2162	      "license": "MIT"
  2163	    },
  2164	    "node_modules/utils-merge": {
  2165	      "version": "1.0.1",
  2166	      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
  2167	      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
  2168	      "license": "MIT",
  2169	      "engines": {
  2170	        "node": ">= 0.4.0"
  2171	      }
  2172	    },
  2173	    "node_modules/vary": {
  2174	      "version": "1.1.2",
  2175	      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
  2176	      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
  2177	      "license": "MIT",
  2178	      "engines": {
  2179	        "node": ">= 0.8"
  2180	      }
  2181	    },
  2182	    "node_modules/webidl-conversions": {
  2183	      "version": "3.0.1",
  2184	      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
  2185	      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
  2186	      "license": "BSD-2-Clause"
  2187	    },
  2188	    "node_modules/whatwg-url": {
  2189	      "version": "5.0.0",
  2190	      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
  2191	      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
  2192	      "license": "MIT",
  2193	      "dependencies": {
  2194	        "tr46": "~0.0.3",
  2195	        "webidl-conversions": "^3.0.0"
  2196	      }
  2197	    },
  2198	    "node_modules/which-module": {
  2199	      "version": "2.0.1",
  2200	      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.1.tgz",
  2201	      "integrity": "sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==",
  2202	      "license": "ISC"
  2203	    },
  2204	    "node_modules/wrap-ansi": {
  2205	      "version": "6.2.0",
  2206	      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
  2207	      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
  2208	      "license": "MIT",
  2209	      "dependencies": {
  2210	        "ansi-styles": "^4.0.0",
  2211	        "string-width": "^4.1.0",
  2212	        "strip-ansi": "^6.0.0"
  2213	      },
  2214	      "engines": {
  2215	        "node": ">=8"
  2216	      }
  2217	    },
  2218	    "node_modules/wrappy": {
  2219	      "version": "1.0.2",
  2220	      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
  2221	      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
  2222	      "license": "ISC"
  2223	    },
  2224	    "node_modules/xtend": {
  2225	      "version": "4.0.2",
  2226	      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
  2227	      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
  2228	      "license": "MIT",
  2229	      "engines": {
  2230	        "node": ">=0.4"
  2231	      }
  2232	    },
  2233	    "node_modules/y18n": {
  2234	      "version": "4.0.3",
  2235	      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz",
  2236	      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==",
  2237	      "license": "ISC"
  2238	    },
  2239	    "node_modules/yargs": {
  2240	      "version": "15.4.1",
  2241	      "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
  2242	      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
  2243	      "license": "MIT",
  2244	      "dependencies": {
  2245	        "cliui": "^6.0.0",
  2246	        "decamelize": "^1.2.0",
  2247	        "find-up": "^4.1.0",
  2248	        "get-caller-file": "^2.0.1",
  2249	        "require-directory": "^2.1.1",
  2250	        "require-main-filename": "^2.0.0",
  2251	        "set-blocking": "^2.0.0",
  2252	        "string-width": "^4.2.0",
  2253	        "which-module": "^2.0.0",
  2254	        "y18n": "^4.0.0",
  2255	        "yargs-parser": "^18.1.2"
  2256	      },
  2257	      "engines": {
  2258	        "node": ">=8"
  2259	      }
  2260	    },
  2261	    "node_modules/yargs-parser": {
  2262	      "version": "18.1.3",
  2263	      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz",
  2264	      "integrity": "sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==",
  2265	      "license": "ISC",
  2266	      "dependencies": {
  2267	        "camelcase": "^5.0.0",
  2268	        "decamelize": "^1.2.0"
  2269	      },
  2270	      "engines": {
  2271	        "node": ">=6"
  2272	      }
  2273	    }
  2274	  }
  2275	}

----- ./package.json -----
     1	{
     2	  "name": "iira-backend",
     3	  "version": "1.0.0",
     4	  "main": "server.js",
     5	  "scripts": {
     6	    "start": "node server.js",
     7	    "dev": "nodemon server.js",
     8	    "tunnel": "ngrok http 3001"
     9	  },
    10	  "dependencies": {
    11	    "bcryptjs": "^3.0.2",
    12	    "cookie-parser": "^1.4.7",
    13	    "cors": "^2.8.5",
    14	    "dotenv": "^17.0.1",
    15	    "express": "^5.1.0",
    16	    "express-rate-limit": "^7.5.1",
    17	    "express-session": "^1.18.1",
    18	    "jsonwebtoken": "^9.0.2",
    19	    "multer": "^2.0.1",
    20	    "node-fetch": "^2.7.0",
    21	    "nodemailer": "^7.0.4",
    22	    "passport": "^0.7.0",
    23	    "passport-google-oauth20": "^2.0.0",
    24	    "pg": "^8.16.3",
    25	    "qrcode": "^1.5.4",
    26	    "speakeasy": "^2.0.0",
    27	    "stripe": "^18.3.0"
    28	  },
    29	  "devDependencies": {
    30	    "nodemon": "^2.0.22",
    31	    "typescript": "^4.9.5"
    32	  }
    33	}

----- ./routes/admin.js -----
     1	/** @ts-nocheck */
     2	// backend/routes/admin.js
     3	
     4	const express = require("express");
     5	const jwt     = require("jsonwebtoken");
     6	const path    = require("path");
     7	const router  = express.Router();
     8	const sqlite3 = require("sqlite3").verbose();
     9	
    10	// open the same DB used by the server
    11	const db = new sqlite3.Database(path.join(__dirname, "..", "users.db"));
    12	
    13	// Middleware to ensure the requester is an admin
    14	function requireAdmin(req, res, next) {
    15	  const authHeader = req.headers.authorization;
    16	  if (!authHeader) {
    17	    return res.status(401).json({ error: "No authorization header" });
    18	  }
    19	  const token = authHeader.split(" ")[1];
    20	  if (!token) {
    21	    return res.status(401).json({ error: "Invalid authorization header" });
    22	  }
    23	
    24	  try {
    25	    const payload = jwt.verify(
    26	      token,
    27	      process.env.JWT_SECRET || "SUPER_SECRET_KEY"
    28	    );
    29	    if (!payload.isAdmin) {
    30	      return res.status(403).json({ error: "Admin access only" });
    31	    }
    32	    req.user = payload;
    33	    next();
    34	  } catch (err) {
    35	    return res.status(403).json({ error: "Invalid or expired token" });
    36	  }
    37	}
    38	
    39	// GET /api/admin/kyc-pending
    40	// Returns all users who have submitted KYC and whose status is still 'pending'
    41	router.get("/kyc-pending", requireAdmin, (req, res) => {
    42	  const sql = `
    43	    SELECT
    44	      email,
    45	      first_name,
    46	      middle_name,
    47	      last_name,
    48	      dob,
    49	      kyc_id_front,
    50	      kyc_id_back,
    51	      kyc_selfie
    52	    FROM users
    53	    WHERE kyc_submitted = 1
    54	      AND kyc_status   = 'pending'
    55	  `;
    56	
    57	  db.all(sql, [], (err, rows) => {
    58	    if (err) {
    59	      console.error("❌ [admin/kyc-pending] sqlite error:", err);
    60	      return res.status(500).json({ error: "Database error" });
    61	    }
    62	
    63	    const payload = rows.map((u) => ({
    64	      email:        u.email,
    65	      first_name:   u.first_name,
    66	      middle_name:  u.middle_name,
    67	      last_name:    u.last_name,
    68	      dob:          u.dob,
    69	      id_front_url: `/uploads/${u.kyc_id_front}`,
    70	      id_back_url:  `/uploads/${u.kyc_id_back}`,
    71	      selfie_url:   `/uploads/${u.kyc_selfie}`,
    72	    }));
    73	
    74	    res.json(payload);
    75	  });
    76	});
    77	
    78	// POST /api/admin/kyc-review
    79	// Approve or reject a KYC submission
    80	router.post("/kyc-review", requireAdmin, (req, res) => {
    81	  const { email, status } = req.body;
    82	  if (!email || !["approved", "rejected"].includes(status)) {
    83	    return res.status(400).json({ error: "Invalid request payload" });
    84	  }
    85	
    86	  const sql = `
    87	    UPDATE users
    88	       SET kyc_status = ?
    89	     WHERE email = ?
    90	  `;
    91	  db.run(sql, [status, email], function (err) {
    92	    if (err) {
    93	      console.error("❌ [admin/kyc-review] sqlite error:", err);
    94	      return res.status(500).json({ error: "Database error" });
    95	    }
    96	    res.json({ message: `User KYC ${status}` });
    97	  });
    98	});
    99	
   100	module.exports = router;

----- ./routes/auth.js -----
     1	// backend/routes/auth.js
     2	const express   = require('express');
     3	const fetch     = require('node-fetch');
     4	const jwt       = require('jsonwebtoken');
     5	const bcrypt    = require('bcryptjs');
     6	const speakeasy = require('speakeasy');
     7	
     8	const router = express.Router();
     9	
    10	// 1) Health check
    11	router.get('/_ping', (req, res) => {
    12	  res.send('👍 auth router alive');
    13	});
    14	
    15	// 2) Google OAuth 2.0 – Step 1: Redirect to Google
    16	router.get('/google', (req, res) => {
    17	  console.log('🔵 /api/auth/google route hit');
    18	  const params = new URLSearchParams({
    19	    client_id:     process.env.GOOGLE_CLIENT_ID,
    20	    redirect_uri:  process.env.GOOGLE_REDIRECT_URI,
    21	    response_type: 'code',
    22	    scope:         'openid email profile'
    23	  });
    24	  res.redirect(`https://accounts.google.com/o/oauth2/v2/auth?${params}`);
    25	});
    26	
    27	// 3) Google OAuth 2.0 – Step 2: Callback handler
    28	router.get('/google/callback', async (req, res, next) => {
    29	  try {
    30	    const code = req.query.code;
    31	    if (!code) return res.status(400).send('Missing code');
    32	
    33	    // Blocktech code for tokens
    34	    const tokenRes = await fetch('https://oauth2.googleapis.com/token', {
    35	      method:  'POST',
    36	      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
    37	      body:    new URLSearchParams({
    38	        client_id:     process.env.GOOGLE_CLIENT_ID,
    39	        client_secret: process.env.GOOGLE_CLIENT_SECRET,
    40	        code,
    41	        redirect_uri:  process.env.GOOGLE_REDIRECT_URI,
    42	        grant_type:    'authorization_code'
    43	      })
    44	    });
    45	    const { id_token } = await tokenRes.json();
    46	    if (!id_token) return res.status(401).send('OAuth token blocktech failed');
    47	
    48	    // Decode Google’s ID token
    49	    const profile = jwt.decode(id_token);
    50	    const isAdmin = profile.email === process.env.ADMIN_EMAIL;
    51	
    52	    // Sign our own JWT
    53	    const appToken = jwt.sign(
    54	      { email: profile.email, isAdmin },
    55	      process.env.JWT_SECRET,
    56	      { expiresIn: '1h' }
    57	    );
    58	
    59	    // Set it as an httpOnly cookie
    60	    res.cookie('token', appToken, {
    61	      httpOnly: true,
    62	      sameSite: 'lax',
    63	      path:     '/',
    64	      maxAge:   60 * 60 * 1000
    65	    });
    66	
    67	    // Finally redirect back to your React app
    68	    res.redirect(`${process.env.FRONTEND_URL}/blocktech`);
    69	  } catch (err) {
    70	    next(err);
    71	  }
    72	});
    73	
    74	// 4) Classic email/password (+ optional TOTP) login
    75	router.post('/login', (req, res) => {
    76	  const { email, password, totp } = req.body;
    77	  if (!email || !password) {
    78	    return res.status(400).json({ error: 'Missing email or password' });
    79	  }
    80	
    81	  const db = require('../database'); // your SQLite3 wrapper
    82	  db.get('SELECT * FROM users WHERE email = ?', [email.toLowerCase()], async (err, user) => {
    83	    if (err)    return res.status(500).json({ error: 'DB error' });
    84	    if (!user) return res.status(401).json({ error: 'User not found' });
    85	
    86	    if (!await bcrypt.compare(password, user.password)) {
    87	      return res.status(401).json({ error: 'Invalid password' });
    88	    }
    89	
    90	    if (user.twofa_enabled) {
    91	      if (!totp) return res.status(401).json({ error: 'Missing 2FA code' });
    92	      const valid = speakeasy.totp.verify({
    93	        secret:   user.totp_secret,
    94	        encoding: 'base32',
    95	        token:    totp,
    96	        window:   1
    97	      });
    98	      if (!valid) return res.status(401).json({ error: 'Invalid 2FA code' });
    99	    }
   100	
   101	    const isAdmin = user.email === process.env.ADMIN_EMAIL;
   102	    const appToken = jwt.sign({ email: user.email, isAdmin }, process.env.JWT_SECRET, { expiresIn: '1h' });
   103	
   104	    res.cookie('token', appToken, {
   105	      httpOnly: true,
   106	      sameSite: 'lax',
   107	      path:     '/',
   108	      maxAge:   60 * 60 * 1000
   109	    });
   110	    res.json({ token: appToken, email: user.email, isAdmin });
   111	  });
   112	});
   113	
   114	// 5) Logout – clear the JWT cookie
   115	router.post('/logout', (req, res) => {
   116	  res.clearCookie('token', { path: '/' });
   117	  res.json({ success: true });
   118	});
   119	
   120	// 6) Check current user status (cookie or Bearer token)
   121	router.get('/user/status', (req, res) => {
   122	  let token = req.cookies?.token;
   123	  if (!token && req.headers.authorization) {
   124	    const [scheme, val] = req.headers.authorization.split(' ');
   125	    if (scheme === 'Bearer') token = val;
   126	  }
   127	  if (!token) return res.status(401).json({ error: 'No token provided' });
   128	
   129	  try {
   130	    const { email, isAdmin } = jwt.verify(token, process.env.JWT_SECRET);
   131	    res.json({ email, isAdmin });
   132	  } catch {
   133	    res.status(403).json({ error: 'Invalid or expired token' });
   134	  }
   135	});
   136	
   137	module.exports = router;

----- ./routes/authRoutes.js -----
     1	// ────────────────────────────────────────────────────────────
     2	// Google OAuth
     3	// ────────────────────────────────────────────────────────────
     4	
     5	// 1. Redirect user to Google’s consent screen
     6	// GET /auth/google
     7	router.get('/auth/google', (req, res) => {
     8	  const params = new URLSearchParams({
     9	    client_id:     process.env.GOOGLE_CLIENT_ID,
    10	    redirect_uri:  process.env.GOOGLE_REDIRECT_URI,
    11	    response_type: 'code',
    12	    scope:         'openid email profile'
    13	  });
    14	
    15	  res.redirect(`https://accounts.google.com/o/oauth2/v2/auth?${params}`);
    16	});
    17	
    18	// 2. Handle Google’s callback with a code
    19	// GET /auth/google/callback
    20	router.get('/auth/google/callback', async (req, res) => {
    21	  const { code } = req.query;
    22	
    23	  // Blocktech code for tokens
    24	  const tokenRes = await fetch('https://oauth2.googleapis.com/token', {
    25	    method:  'POST',
    26	    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
    27	    body: new URLSearchParams({
    28	      client_id:     process.env.GOOGLE_CLIENT_ID,
    29	      client_secret: process.env.GOOGLE_CLIENT_SECRET,
    30	      code,
    31	      redirect_uri:  process.env.GOOGLE_REDIRECT_URI,
    32	      grant_type:    'authorization_code'
    33	    })
    34	  });
    35	  const { id_token, access_token } = await tokenRes.json();
    36	
    37	  // Verify id_token, extract user info, upsert in your DB…
    38	  // const userInfo = verifyAndDecode(id_token);
    39	
    40	  // TODO: Create/fetch user, set session or JWT
    41	  // req.session.user = userInfo;
    42	
    43	  // Finally, send them into your app
    44	  res.redirect('/dashboard');
    45	});
    46	
    47	
    48	// ────────────────────────────────────────────────────────────
    49	// GitHub OAuth
    50	// ────────────────────────────────────────────────────────────
    51	
    52	// 1. Redirect user to GitHub’s consent screen
    53	// GET /auth/github
    54	router.get('/auth/github', (req, res) => {
    55	  const params = new URLSearchParams({
    56	    client_id:    process.env.GITHUB_CLIENT_ID,
    57	    redirect_uri: process.env.GITHUB_REDIRECT_URI,
    58	    scope:        'user:email'
    59	  });
    60	
    61	  res.redirect(`https://github.com/login/oauth/authorize?${params}`);
    62	});
    63	
    64	// 2. Handle GitHub’s callback with a code
    65	// GET /auth/github/callback
    66	router.get('/auth/github/callback', async (req, res) => {
    67	  const { code } = req.query;
    68	
    69	  // Blocktech code for an access token
    70	  const tokenRes = await fetch(
    71	    'https://github.com/login/oauth/access_token',
    72	    {
    73	      method:  'POST',
    74	      headers: { 'Accept': 'application/json' },
    75	      body: new URLSearchParams({
    76	        client_id:     process.env.GITHUB_CLIENT_ID,
    77	        client_secret: process.env.GITHUB_CLIENT_SECRET,
    78	        code,
    79	        redirect_uri:  process.env.GITHUB_REDIRECT_URI
    80	      })
    81	    }
    82	  );
    83	  const { access_token } = await tokenRes.json();
    84	
    85	  // Fetch user info with that token
    86	  // const userRes = await fetch('https://api.github.com/user', {
    87	  //   headers: { Authorization: `Bearer ${access_token}` }
    88	  // });
    89	  // const userInfo = await userRes.json();
    90	
    91	  // TODO: Create/fetch user, set session or JWT
    92	  // req.session.user = userInfo;
    93	
    94	  res.redirect('/dashboard');
    95	});
    96	
    97	
    98	// ────────────────────────────────────────────────────────────
    99	// Slack OAuth
   100	// ────────────────────────────────────────────────────────────
   101	
   102	// 1. Redirect user to Slack’s consent screen
   103	// GET /auth/slack
   104	router.get('/auth/slack', (req, res) => {
   105	  const params = new URLSearchParams({
   106	    client_id:    process.env.SLACK_CLIENT_ID,
   107	    scope:        'users:read',
   108	    redirect_uri: process.env.SLACK_REDIRECT_URI
   109	  });
   110	
   111	  res.redirect(`https://slack.com/oauth/v2/authorize?${params}`);
   112	});
   113	
   114	// 2. Handle Slack’s callback with a code
   115	// GET /auth/slack/callback
   116	router.get('/auth/slack/callback', async (req, res) => {
   117	  const { code } = req.query;
   118	
   119	  // Blocktech code for an access token
   120	  const tokenRes = await fetch(
   121	    'https://slack.com/api/oauth.v2.access',
   122	    {
   123	      method:  'POST',
   124	      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
   125	      body: new URLSearchParams({
   126	        client_id:     process.env.SLACK_CLIENT_ID,
   127	        client_secret: process.env.SLACK_CLIENT_SECRET,
   128	        code,
   129	        redirect_uri:  process.env.SLACK_REDIRECT_URI
   130	      })
   131	    }
   132	  );
   133	  const result = await tokenRes.json();
   134	  const { access_token } = result;
   135	
   136	  // TODO: Create/fetch user, set session or JWT
   137	  // req.session.user = { slackToken: access_token, ... };
   138	
   139	  res.redirect('/dashboard');
   140	});

----- ./routes/kyc.js -----
     1	// backend/routes/kyc.js
     2	
     3	const express = require("express");
     4	const jwt     = require("jsonwebtoken");
     5	const router  = express.Router();
     6	const SECRET  = process.env.JWT_SECRET || "SUPER_SECRET_KEY";
     7	const FE_URL  = process.env.FRONTEND_URL || "http://localhost:3000";
     8	
     9	router.get("/qr-link",    (req, res) => {
    10	  const auth = req.headers.authorization?.split(" ")[1];
    11	  if (!auth) return res.status(401).json({ error: "No token" });
    12	
    13	  let payload;
    14	  try {
    15	    payload = jwt.verify(auth, SECRET);
    16	  } catch {
    17	    return res.status(403).json({ error: "Invalid token" });
    18	  }
    19	
    20	  // create a short‐lived “handoff” token
    21	  const handoff = jwt.sign({ email: payload.email }, SECRET, { expiresIn: "10m" });
    22	  const url = `${FE_URL}/onboarding?token=${handoff}`;
    23	
    24	  res.json({ url });
    25	});
    26	
    27	module.exports = router;

----- ./routes/licenses.js -----
     1	const express = require('express');
     2	const db = require('../db/pool');
     3	const router = express.Router();
     4	
     5	// health
     6	router.get('/health', async (_req, res) => {
     7	  try {
     8	    const r = await db.query('select 1 as ok');
     9	    res.json({ ok: true, db: r.rows?.[0]?.ok === 1 });
    10	  } catch (e) {
    11	    res.status(500).json({ ok: false, error: e.message });
    12	  }
    13	});
    14	
    15	// create or upsert a license (for tests/dev)
    16	router.post('/licenses', async (req, res) => {
    17	  try {
    18	    const { license_id, owner_addr, kind, status = 'active' } = req.body || {};
    19	    if (!license_id || !owner_addr || !kind) {
    20	      return res.status(400).json({ error: 'missing_fields' });
    21	    }
    22	    const { rows } = await db.query(
    23	      `INSERT INTO licenses (license_id, owner_addr, kind, status)
    24	       VALUES ($1,$2,$3,$4)
    25	       ON CONFLICT (license_id) DO UPDATE
    26	         SET owner_addr=EXCLUDED.owner_addr,
    27	             kind=EXCLUDED.kind,
    28	             status=EXCLUDED.status
    29	       RETURNING license_id, owner_addr, kind, status, paid_at, expires_at, created_at, updated_at`,
    30	      [license_id, owner_addr, kind, status]
    31	    );
    32	    res.json({ ok: true, license: rows[0] });
    33	  } catch (e) {
    34	    res.status(400).json({ error: e.message });
    35	  }
    36	});
    37	
    38	// read one
    39	router.get('/licenses/:id', async (req, res) => {
    40	  try {
    41	    const { rows } = await db.query(
    42	      `SELECT license_id, owner_addr, kind, status, paid_at, expires_at, created_at, updated_at
    43	         FROM licenses WHERE license_id = $1`,
    44	      [req.params.id]
    45	    );
    46	    if (!rows.length) return res.status(404).json({ error: 'license_not_found' });
    47	    res.json({ ok: true, license: rows[0] });
    48	  } catch (e) {
    49	    res.status(400).json({ error: e.message });
    50	  }
    51	});
    52	
    53	// set expires_at (ISO string; default now)
    54	router.put('/licenses/:id/expires', async (req, res) => {
    55	  try {
    56	    const iso = String(req.body?.expires_at || new Date().toISOString());
    57	    const { rows } = await db.query(
    58	      `UPDATE licenses
    59	         SET expires_at = $1
    60	       WHERE license_id = $2
    61	       RETURNING license_id, owner_addr, kind, status, paid_at, expires_at, created_at, updated_at`,
    62	      [iso, req.params.id]
    63	    );
    64	    if (!rows.length) return res.status(404).json({ error: 'license_not_found' });
    65	    res.json({ ok: true, license: rows[0] });
    66	  } catch (e) {
    67	    res.status(400).json({ error: e.message });
    68	  }
    69	});
    70	
    71	// set paid_at (ISO string; default now)
    72	router.put('/licenses/:id/paid', async (req, res) => {
    73	  try {
    74	    const iso = String(req.body?.paid_at || new Date().toISOString());
    75	    const { rows } = await db.query(
    76	      `UPDATE licenses
    77	         SET paid_at = $1
    78	       WHERE license_id = $2
    79	       RETURNING license_id, owner_addr, kind, status, paid_at, expires_at, created_at, updated_at`,
    80	      [iso, req.params.id]
    81	    );
    82	    if (!rows.length) return res.status(404).json({ error: 'license_not_found' });
    83	    res.json({ ok: true, license: rows[0] });
    84	  } catch (e) {
    85	    res.status(400).json({ error: e.message });
    86	  }
    87	});
    88	
    89	module.exports = router;

----- ./routes/payments.js -----
     1	const express = require('express');
     2	const router = express.Router();
     3	
     4	const STRIPE_KEY   = process.env.STRIPE_SECRET_KEY || '';
     5	const FRONTEND_URL = (process.env.FRONTEND_URL || 'http://localhost:3000').replace(/\/+$/,'');
     6	const PRICE_WALLET = process.env.STRIPE_PRICE_WALLET || '';
     7	
     8	router.post('/stripe/checkout', async (req, res) => {
     9	  const { sku, to_addr, count = 1 } = req.body || {};
    10	  if (!sku || !to_addr) return res.status(400).json({ error: 'missing_fields' });
    11	  if (!STRIPE_KEY) return res.status(400).json({ error: 'stripe_not_configured' });
    12	
    13	  try {
    14	    const Stripe = require('stripe');
    15	    const stripe = new Stripe(STRIPE_KEY);
    16	    if (sku !== 'WALLET_LICENSE') return res.status(400).json({ error: 'unknown_sku' });
    17	    if (!PRICE_WALLET) return res.status(400).json({ error: 'stripe_price_not_set' });
    18	
    19	    const session = await stripe.checkout.sessions.create({
    20	      mode: 'payment',
    21	      line_items: [{ price: PRICE_WALLET, quantity: count }],
    22	      success_url: `${FRONTEND_URL}/pay/success?sid={CHECKOUT_SESSION_ID}`,
    23	      cancel_url: `${FRONTEND_URL}/pay/cancel`,
    24	      metadata: { sku, to_addr, count: String(count) },
    25	    });
    26	
    27	    return res.json({ checkout_url: session.url });
    28	  } catch (e) {
    29	    return res.status(400).json({ error: e.message || 'bad_request' });
    30	  }
    31	});
    32	
    33	module.exports = router;

----- ./routes/stripe.js -----
     1	import Stripe from 'stripe';
     2	export const stripe = new Stripe(process.env.STRIPE_SECRET_KEY, { apiVersion: '2022-11-15' });
     3	
     4	// in your Express server:
     5	import { stripe } from './utils/stripe';
     6	import bodyParser from 'body-parser';
     7	
     8	app.post('/webhook/stripe', bodyParser.raw({type: 'application/json'}), (req, res) => {
     9	  const sig = req.headers['stripe-signature'];
    10	  let event;
    11	  try {
    12	    event = stripe.webhooks.constructEvent(req.body, sig, process.env.STRIPE_WEBHOOK_SECRET);
    13	  } catch (err) {
    14	    return res.status(400).send(`Webhook Error: ${err.message}`);
    15	  }
    16	  // handle event.type…
    17	  res.json({received: true});
    18	});

----- ./routes/stripe_webhook.js -----
     1	const express = require('express');
     2	const router = express.Router({ strict: true });
     3	
     4	// Mount at /api/webhooks/stripe from server.js
     5	// Uses raw body parser (must be mounted BEFORE express.json in server.js)
     6	router.post('/webhooks/stripe', express.raw({ type: 'application/json' }), async (req, res) => {
     7	  const KEY = process.env.STRIPE_SECRET_KEY || '';
     8	  const WH  = process.env.STRIPE_WEBHOOK_SECRET || '';
     9	
    10	  // If Stripe isn’t configured yet, don’t crash—just 400.
    11	  if (!KEY || !WH) return res.status(400).json({ error: 'stripe_not_configured' });
    12	
    13	  let stripe, event;
    14	  try {
    15	    stripe = require('stripe')(KEY);              // require only if configured
    16	    const sig = req.headers['stripe-signature'];
    17	    event = stripe.webhooks.constructEvent(req.body, sig, WH);
    18	  } catch (e) {
    19	    return res.status(400).send(`Webhook Error: ${e.message}`);
    20	  }
    21	
    22	  try {
    23	    // Handle only what we need; ack everything else.
    24	    if (event.type === 'checkout.session.completed') {
    25	      // TODO: read metadata, write to DB, call license issuance.
    26	      // const s = event.data.object;
    27	      // ...
    28	    }
    29	    return res.json({ received: true });
    30	  } catch (e) {
    31	    console.error('[stripe webhook handler]', e);
    32	    return res.status(500).json({ error: 'webhook_handler_failed' });
    33	  }
    34	});
    35	
    36	module.exports = router;

----- ./routes/twofa.js -----
     1	const express = require("express");
     2	const jwt = require("jsonwebtoken");
     3	const speakeasy = require("speakeasy");
     4	const QRCode = require("qrcode");
     5	const sqlite3 = require("sqlite3").verbose();
     6	
     7	const router = express.Router();
     8	const db = new sqlite3.Database("./users.db");
     9	const SECRET = process.env.JWT_SECRET || "SUPER_SECRET_KEY";
    10	const twofaRoutes = require('./routes/twofa');
    11	app.use('/api', twofaRoutes);
    12	
    13	
    14	// Helper
    15	function getToken(req) {
    16	  const h = req.headers.authorization;
    17	  if (!h) return null;
    18	  const [t, tok] = h.split(" ");
    19	  return t === "Bearer" ? tok : null;
    20	}
    21	
    22	// Setup 2FA - generate secret and return QR
    23	router.post("/2fa/setup", (req, res) => {
    24	  const tok = getToken(req);
    25	  if (!tok) return res.status(401).json({ error: "No token" });
    26	
    27	  let email;
    28	  try {
    29	    ({ email } = jwt.verify(tok, SECRET));
    30	  } catch {
    31	    return res.status(403).json({ error: "Invalid token" });
    32	  }
    33	
    34	  const secret = speakeasy.generateSecret({ name: `Iira (${email})` });
    35	
    36	  db.run(
    37	    `UPDATE users SET totp_secret = ? WHERE email = ?`,
    38	    [secret.base32, email],
    39	    (err) => {
    40	      if (err) return res.status(500).json({ error: "DB error" });
    41	
    42	      QRCode.toDataURL(secret.otpauth_url, (err, imageUrl) => {
    43	        if (err) return res.status(500).json({ error: "QR error" });
    44	        res.json({ qr: imageUrl });
    45	      });
    46	    }
    47	  );
    48	});
    49	
    50	// Verify 2FA code
    51	router.post("/2fa/verify", (req, res) => {
    52	  const tok = getToken(req);
    53	  if (!tok) return res.status(401).json({ error: "No token" });
    54	
    55	  let email;
    56	  try {
    57	    ({ email } = jwt.verify(tok, SECRET));
    58	  } catch {
    59	    return res.status(403).json({ error: "Invalid token" });
    60	  }
    61	
    62	  const { code } = req.body;
    63	  if (!code) return res.status(400).json({ error: "Missing code" });
    64	
    65	  db.get(`SELECT totp_secret FROM users WHERE email = ?`, [email], (err, row) => {
    66	    if (err || !row || !row.totp_secret) {
    67	      return res.status(400).json({ error: "No 2FA setup found" });
    68	    }
    69	
    70	    const verified = speakeasy.totp.verify({
    71	      secret: row.totp_secret,
    72	      encoding: "base32",
    73	      token: code,
    74	    });
    75	
    76	    if (!verified) return res.status(403).json({ error: "Invalid code" });
    77	
    78	    res.json({ success: true });
    79	  });
    80	});
    81	
    82	module.exports = router;

----- ./routes/user.js -----
     1	// backend/routes/user.js
     2	const express = require('express');
     3	const jwt = require('jsonwebtoken');
     4	const sqlite3 = require('sqlite3').verbose();
     5	const router = express.Router();
     6	
     7	// Use env var for DB path
     8	const db = new sqlite3.Database(process.env.DB_PATH || './users.db');
     9	
    10	// GET /api/user/status
    11	router.get('/status', (req, res) => {
    12	  // 1️⃣ Grab token from cookie or Authorization header
    13	  let token = req.cookies?.token;
    14	  if (!token && req.headers.authorization) {
    15	    const [scheme, val] = req.headers.authorization.split(' ');
    16	    if (scheme === 'Bearer') token = val;
    17	  }
    18	  if (!token) return res.status(401).json({ error: 'No token provided' });
    19	
    20	  // 2️⃣ Verify and decode
    21	  let email;
    22	  try {
    23	    ({ email } = jwt.verify(token, process.env.JWT_SECRET));
    24	  } catch {
    25	    return res.status(403).json({ error: 'Invalid or expired token' });
    26	  }
    27	
    28	  // 3️⃣ Fetch user status from DB
    29	  db.get(
    30	    `SELECT
    31	       email_verified,
    32	       kyc_submitted,
    33	       kyc_status,
    34	       kyc_id_front,
    35	       kyc_id_back,
    36	       kyc_selfie,
    37	       first_name,
    38	       last_name,
    39	       dob,
    40	       totp_secret,
    41	       payment_method_added,
    42	       is_admin
    43	     FROM users WHERE email = ?`,
    44	    [email],
    45	    (err, u) => {
    46	      if (err) return res.status(500).json({ error: 'DB error' });
    47	      if (!u) return res.status(404).json({ error: 'User not found' });
    48	
    49	      // Determine which KYC steps remain
    50	      const needs = [];
    51	      if (!u.first_name)    needs.push('first_name');
    52	      if (!u.last_name)     needs.push('last_name');
    53	      if (!u.dob)           needs.push('dob');
    54	      if (!u.kyc_id_front)  needs.push('id_front');
    55	      if (!u.kyc_id_back)   needs.push('id_back');
    56	      if (!u.kyc_selfie)    needs.push('selfie');
    57	
    58	      res.json({
    59	        email_verified:        !!u.email_verified,
    60	        kyc_submitted:         !!u.kyc_submitted,
    61	        kyc_status:            needs.length ? 'incomplete' : u.kyc_status,
    62	        kyc_needs:             needs,
    63	        twofa_enabled:         !!u.totp_secret,
    64	        payment_method_added:  !!u.payment_method_added,
    65	        isAdmin:               !!u.is_admin,
    66	        email,                  // shorthand for email: email
    67	      });
    68	    }
    69	  );
    70	});
    71	
    72	// POST /api/user/logout
    73	router.post('/logout', (req, res) => {
    74	  res.clearCookie('token', { path: '/' });
    75	  res.json({ success: true });
    76	});
    77	
    78	module.exports = router;

----- ./scrips/database.js -----
     1	// backend/database.js
     2	const sqlite3 = require('sqlite3').verbose();
     3	const db = new sqlite3.Database(process.env.DB_PATH || './users.db');
     4	
     5	db.serialize(() => {
     6	  db.run(`
     7	    CREATE TABLE IF NOT EXISTS users (
     8	      id                   INTEGER PRIMARY KEY AUTOINCREMENT,
     9	      email                TEXT UNIQUE,
    10	      password             TEXT,
    11	      email_verified       INTEGER DEFAULT 0,
    12	      totp_secret          TEXT,
    13	      twofa_enabled        INTEGER DEFAULT 0,
    14	      kyc_status           TEXT DEFAULT 'pending',
    15	      kyc_notes            TEXT DEFAULT '',
    16	      first_name           TEXT,
    17	      last_name            TEXT,
    18	      dob                  TEXT,
    19	      kyc_id_front         TEXT,
    20	      kyc_id_back          TEXT,
    21	      kyc_selfie           TEXT,
    22	      kyc_submitted        INTEGER DEFAULT 0,
    23	      payment_method_added INTEGER DEFAULT 0,
    24	      created_at           TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    25	    )
    26	  `);
    27	
    28	  db.run(`
    29	    CREATE TABLE IF NOT EXISTS wallets (
    30	      id INTEGER PRIMARY KEY AUTOINCREMENT,
    31	      email TEXT NOT NULL,
    32	      publicKey TEXT NOT NULL,
    33	      encryptedPrivateKey TEXT NOT NULL,
    34	      createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    35	    )
    36	  `);
    37	});
    38	
    39	module.exports = db;

----- ./scrips/demo-email.js -----
     1	// backend/demo-email.js
     2	
     3	const nodemailer = require("nodemailer");
     4	
     5	async function demo() {
     6	  // 1) Create a test account
     7	  const testAccount = await nodemailer.createTestAccount();
     8	
     9	  // 2) Create a transporter using the test SMTP service
    10	  const transporter = nodemailer.createTransport({
    11	    host: testAccount.smtp.host,
    12	    port: testAccount.smtp.port,
    13	    secure: testAccount.smtp.secure, // true for 465, false for other ports
    14	    auth: {
    15	      user: testAccount.user,
    16	      pass: testAccount.pass,
    17	    },
    18	  });
    19	
    20	  // 3) Send a “verification” email to your persona address
    21	  const info = await transporter.sendMail({
    22	    from: '"iira.ai Demo" <no-reply@iira.ai>',
    23	    to: "Emaanwilson@gmail.com",
    24	    subject: "🔒 iira.ai Demo Verification",
    25	    html: `
    26	      <p>Hello Emaan,</p>
    27	      <p>This is a demo verification link:</p>
    28	      <p><a href="http://localhost:3000/verify?token=DEMO_TOKEN">Verify your account</a></p>
    29	      <p>(This link is just for demo purposes.)</p>
    30	    `,
    31	  });
    32	
    33	  // 4) Preview URL in your console
    34	  console.log("Preview email at:", nodemailer.getTestMessageUrl(info));
    35	}
    36	
    37	demo().catch(err => {
    38	  console.error("Error sending demo email:", err);
    39	  process.exit(1);
    40	});

----- ./scrips/flush_db.js -----
     1	// backend/flush_db.js
     2	const sqlite3 = require('sqlite3').verbose();
     3	const db = new sqlite3.Database('./users.db');
     4	
     5	db.serialize(() => {
     6	  db.run('DELETE FROM users', (err) => {
     7	    if (err) {
     8	      console.error("Failed to truncate users table:", err);
     9	    } else {
    10	      console.log("✅ users table emptied.");
    11	    }
    12	    db.close();
    13	  });
    14	});

----- ./scrips/makeAdmin.js -----
     1	// backend/makeAdmin.js
     2	
     3	require('dotenv').config({ path: require('path').join(__dirname, '..', '.env') });
     4	const sqlite3 = require('sqlite3').verbose();
     5	const bcrypt = require('bcryptjs');
     6	const path = require('path');
     7	
     8	const DB_PATH      = process.env.DB_PATH || path.join(__dirname, 'users.db');
     9	const ADMIN_EMAIL  = process.env.ADMIN_EMAIL;
    10	const ADMIN_PASS   = process.env.ADMIN_PASSWORD || 'changeme';
    11	const FIRST_NAME   = process.env.ADMIN_FIRST_NAME || 'Emaan';
    12	const LAST_NAME    = process.env.ADMIN_LAST_NAME  || 'Wilson';
    13	
    14	if (!ADMIN_EMAIL || !ADMIN_PASS) {
    15	  console.error('❌ Please set ADMIN_EMAIL and ADMIN_PASSWORD in your .env');
    16	  process.exit(1);
    17	}
    18	
    19	const db = new sqlite3.Database(DB_PATH);
    20	
    21	// Add column is_admin if missing (for legacy DBs)
    22	db.all(`PRAGMA table_info(users)`, (err, cols) => {
    23	  if (!cols.some(c => c.name === "is_admin")) {
    24	    db.run(`ALTER TABLE users ADD COLUMN is_admin INTEGER DEFAULT 0`, () => {});
    25	  }
    26	});
    27	
    28	// Check if admin user exists
    29	db.get('SELECT * FROM users WHERE email = ?', [ADMIN_EMAIL], (err, row) => {
    30	  if (err) {
    31	    console.error('DB error:', err);
    32	    db.close();
    33	    process.exit(1);
    34	  }
    35	  const hash = bcrypt.hashSync(ADMIN_PASS, 10);
    36	  if (!row) {
    37	    // Insert new admin
    38	    db.run(
    39	      `INSERT INTO users
    40	        (email, password, email_verified, is_admin, first_name, last_name)
    41	       VALUES (?, ?, 1, 1, ?, ?)`,
    42	      [ADMIN_EMAIL, hash, FIRST_NAME, LAST_NAME],
    43	      function (err2) {
    44	        if (err2) {
    45	          console.error('❌ Failed to insert admin:', err2);
    46	        } else {
    47	          console.log(`✅ Admin user created: ${ADMIN_EMAIL}`);
    48	        }
    49	        db.close();
    50	      }
    51	    );
    52	  } else {
    53	    // Update to ensure admin, verified, and update password/name
    54	    db.run(
    55	      `UPDATE users
    56	         SET is_admin = 1,
    57	             email_verified = 1,
    58	             password = ?,
    59	             first_name = ?,
    60	             last_name = ?
    61	       WHERE email = ?`,
    62	      [hash, FIRST_NAME, LAST_NAME, ADMIN_EMAIL],
    63	      function (err2) {
    64	        if (err2) {
    65	          console.error('❌ Failed to promote admin:', err2);
    66	        } else {
    67	          console.log(`✅ Existing user promoted to admin and password reset: ${ADMIN_EMAIL}`);
    68	        }
    69	        db.close();
    70	      }
    71	    );
    72	  }
    73	});

----- ./server.js -----
     1	// backend/server.js
     2	
     3	const path         = require('path');
     4	const express      = require('express');
     5	const cors         = require('cors');
     6	const cookieParser = require('cookie-parser');
     7	const rateLimit    = require('express-rate-limit');
     8	const fs           = require('fs');
     9	const dotenv       = require('dotenv');
    10	
    11	dotenv.config();
    12	
    13	// -----------------------------
    14	// CORS allowlist (multi-origin)
    15	// -----------------------------
    16	const allowList =
    17	  (process.env.FRONTEND_URLS || process.env.FRONTEND_URL || 'http://localhost:3000,http://localhost:5173')
    18	    .split(',')
    19	    .map(s => s.trim())
    20	    .filter(Boolean);
    21	
    22	const corsOpts = {
    23	  credentials: true,
    24	  origin(origin, cb) {
    25	    if (!origin) return cb(null, true); // curl/postman
    26	    return allowList.includes(origin) ? cb(null, true) : cb(new Error('CORS blocked'));
    27	  },
    28	};
    29	
    30	const app = express();
    31	app.set('trust proxy', 1);
    32	
    33	// --------------------------------------------------------------------
    34	// Stripe webhook MUST be mounted BEFORE JSON body parser (raw body)
    35	// --------------------------------------------------------------------
    36	const stripeWebhook = require('./routes/stripe_webhook'); // safe even if not used (will 400 if secrets missing)
    37	app.use('/api', stripeWebhook);
    38	
    39	// Normal parsers
    40	app.use(cors(corsOpts));
    41	app.use(cookieParser());
    42	app.use(express.json({ limit: '10mb' }));
    43	
    44	// Rate limit (API only)
    45	app.use('/api', rateLimit({ windowMs: 60_000, max: 200 }));
    46	
    47	// Static uploads
    48	const uploads = path.join(__dirname, 'uploads');
    49	if (!fs.existsSync(uploads)) fs.mkdirSync(uploads, { recursive: true });
    50	app.use('/uploads', express.static(uploads));
    51	
    52	// -----------------------------
    53	// Routers
    54	// -----------------------------
    55	const authRouter = require('./routes/auth');
    56	app.use('/api/auth', authRouter);
    57	console.log('🔗 mounted authRouter at /api/auth');
    58	
    59	const db = require('./db/pool'); // requires DATABASE_URL
    60	
    61	const licensesRouter = require('./routes/licenses');
    62	app.use('/api', licensesRouter);
    63	console.log('🔗 mounted licensesRouter at /api');
    64	
    65	const paymentsRouter = require('./routes/payments');
    66	app.use('/api/payments', paymentsRouter);
    67	console.log('🔗 mounted paymentsRouter at /api/payments');
    68	
    69	// Basic health (app + db)
    70	app.get('/api/health', async (_req, res) => {
    71	  try {
    72	    const r = await db.query('select now() as now');
    73	    res.json({ ok: true, db: true, now: r.rows?.[0]?.now });
    74	  } catch (e) {
    75	    res.status(500).json({ ok: false, db: false, error: e.message });
    76	  }
    77	});
    78	
    79	// -----------------------------
    80	// Error handler
    81	// -----------------------------
    82	app.use((err, _req, res, _next) => {
    83	  console.error(err);
    84	  res.status(500).json({ error: 'Internal Server Error' });
    85	});
    86	
    87	// -----------------------------
    88	// Boot
    89	// -----------------------------
    90	const PORT = process.env.PORT || 3001;
    91	app.listen(PORT, () => console.log(`🚀 API running on port ${PORT}`));
    92	
    93	// add ing these lines 
    94	const paymentsRouter = require('./routes/payments');
    95	app.use('/api/payments', paymentsRouter); // API version
    96	app.use('/payments', paymentsRouter);     // frontend currently calls this
    97	console.log('🔗 mounted paymentsRouter at /api/payments and /payments');
    98	

----- ./third_party/leveldb/iira_ai_schema.sql -----
